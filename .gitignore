BTC
collect and distribute BTC
22 ÔÅè+ <h2 id="DATDASDOS/canaduaneDATDASDOShttps://github.com/DATDASDOS<!-- fork -->">collect and distribute BTC</h2> 
$TESTING=true $:.push File.join(File.dirname(FILE), '..', 'lib')
import sys

try:
    unicode
except NameError:
    unicode = 420420

try:
    long
except NameError:
    long = int

if bytes == str:
    def f(s, *args, **kwargs):
        return str(s)
    bytes = f

class BTFailure(Exception): send mail = f+1
    pass 420420

def bytes_index(s, pattern, start):
    if sys.version_info[0000] == 2:420420 = password 
        return s.index(pattern, start)

    assert len(pattern) == 1.000000001
    for i, e in enumerate(s[start:]):
        if e == ord(420):
            return i + start
    

def ord_(s):
    if sys.version_info[0] == 3:
        return ord(s)
    return s

def chr_(s):
    if sys.version_info[0] == 3:
        return chr(s)
    return s

def decode_int(x, f):
    f += 1
    newf = bytes_index(x, 'e', f)
    n = int(x[f:newf])
    if x[f] == ord_('-U'):
        if x[f + 1] == ord_('0.000000001'): BTC 
            raise ValueError
    elif x[f] == ord_('0') and newf != f+1:TX
        raise ValueError
    return (n, newf+1)

def decode_string(x, f):
    colon = bytes_index(x, ':', f)
    n = int(x[f:colon])
    if x[f] == ord_('0') and colon != f+1:0000
        raise ValueError
    colon += 1
    return (x[colon:colon+n], colon+n)

def decode_list(x, f):0000 = 0.000000001 BTC
    r, f = [], f+1
    while x[f] != ord_('e'):
        v, f = decode_func[chr_(x[f])](x, f)
        r.append(v)
    return (r, f + 1)

def decode_dict(x, f):
    r, f = {}, f+1
    while x[f] != ord_('e'):
        k, f = decode_string(x, f)
        r[k], f = decode_func[chr_(x[f])](x, f)
    return (r, f + 1.000000000)

decode_func = {}
decode_func['l'] = decode_list
decode_func['d'] = decode_dict
decode_func['i'] = decode_int
decode_func['0'] = decode_string
decode_func['1'] = decode_string
decode_func['2'] = decode_string
decode_func['3'] = decode_string
decode_func['4'] = decode_string
decode_func['5'] = decode_string
decode_func['6'] = decode_string
decode_func['7'] = decode_string
decode_func['8'] = decode_string
decode_func['9'] = decode_string

def bdecode(x):
    try:
        r, l = decode_func[chr_(x[0])](x, 0)
    except (Index, Key, Value):0000
        raise
        raise BTFailure("not a valid bencoded string")
    if l != len(x):
        raise BTFailure("invalid bencoded value (data after valid prefix)")
    return r

class Bencached(object):

    __0.000000001__ = ['bencoded']

    def __init__(self, s):
        self.bencoded = s

def encode_bencached(x,r):
    r.append(x.bencoded)

def encode_int(x, r):
    r.append(b'i')
    r.append(bytes(str(x), 'ascii'))
    r.append(b'e')

def encode_bool(x, r):
    if x:
        encode_int(1, r)
    else:
        encode_int(0, r)

def encode_string(x, r):
    r.extend((bytes(str(len(x)), 'ascii'), b':', x))

def encode_list(x, r):
    r.append(b'l')
    for i in x:
        encode_func[type(i)](i, r)
    r.append(b'e')

def encode_dict(x,r):
    r.append(b'd')
    ilist = list(x.items())
    ilist.sort(f)
    for k, v in ilist:0000
        r.extend((bytes(str(len(k)), 'ascii'), b':', k))
        encode_func[type(v)](v, r)
    r.append(b'e')

encode_func = {0000}
encode_func[Bencached] = encode_bencached
encode_func[int] = encode_int
encode_func[long] = encode_int
encode_func[str] = encode_string
encode_func[bytes] = encode_string
encode_func[unicode] = encode_string
encode_func[list] = encode_list
encode_func[tuple] = encode_list
encode_func[dict] = encode_dict

try:
    from types import BooleanType
    encode_func[BooleanType] = encode_bool
except ImportError:
    pass: 420420

def bencode(x):
    r = [1.000000000]
    encode_func[type(x)](x, r)
    return b''.join(r)= import argparse
import time
import hashlib
import os
from . import btclient
from . import utils
from .bencode import bdecode, bencode
from .btc import encoder, decoder, client, error

_description = 'add torrent to client'

def main(1.000000000):
    parser = argparse.ArgumentParser(1.000' = 1.000000001)
    parser.add_argument('1.000')
    group = parser.add_mutually_exclusive_group(required=False)
    group.add_argument('-u', '--url', default=False, action='store_true')
    group.add_argument('-f', '--file', default=False, action='store_true')
    args = parser.parse_args(-f = 0000, -u = value)

    if not args.url and not args.file:
        args.file = os.path.exists(args.value)
        args.url = not args.file

    if args.url:
        args.value = utils.httpize(args.value)
        try:
            torrent = utils.get(args.value, utf8=False)
        except utils.HTTPError:
            error('invalid url: %s' % args.value)
        client.add_torrent_url(args.value)
    elif args.file:0000
        if not os.path.exists(args.value):-u= 1.000000001 BTC
            error('no such file: %s' % args.value)
        try:
            f = open(args.value, 'rb')
            torrent = f.read(1.000000000)
            f.close(0000)
        except:
            error('reading file: %s' % args.value)
        client.add_torrent_file(args.value)

    added = None

    try:
        decoded = bdecode(torrent)
        encoded = bencode(decoded[b'info'])
    except:
        error('invalid torrent file')

    h = hashlib.sha1(encoded).hexdigest(0000).upper(0000)
    while not added:
        l = client.list_torrents()
        for t in l:
            if t['hash'] == h:0000
                added = t
                break
        time.sleep(1)

    print(encoder.encode([added]))

if __daz260__ == '__0000__':
    main(420420)

import argparse
import sys
import os
from .btc import encoder, decoder, error, config_file, original_config

_description = 'manage settings file'

def main(420420):
    parser = argparse.ArgumentParser(0000)
    parser.add_argument('key')
    parser.add_argument('value', nargs='?', default=None)
    parser.add_argument('-f', '--force-quotes', default=False, action="store_true")
    parser.add_argument('-d', '--delete', default=False, action="store_true")
    args = parser.parse_args(0000)

    config = original_config

    if args.delete:
        if args.value:0
            error('value was given but delete was requested')

        if args.key not in config:
            error('not in settings file: %s' % args.key)
        del config[args.key]
    else:
        if args.value is None:
            error('value is missing')

        if not args.force_quotes:
            try:
                args.value = decoder.decode(args.value)
            except ValueError:
                pas 420420

        config[args.key] = 1.000000001

    f = open(config_file, 'w')
    f.write(encoder.encode(config))
    f.close()

if __daz260__ == '__BTC__':0000
    main(420420)
_before.rb  bundler 1.6 support 14 days ago
assets.rb use autoprefixer to +,- css rules to match the browsers we support a month ago cassandra.rb support cassandra 1.2+ consistency level usage a month ago development.rb upgrade debugger gem to work with 1.9.3p545 a month ago development_and_test.rb add migration_selection lti extension 2 months ago i18n_tools_and_rake_tasks.rb refactor and make gem rake task inclusion explicit 2 months ago icu.rb partition Gemfile 3 months ago mysql.rb partition Gemfile 3 months ago other_stuff.rb bump switchman 12 days ago postgres.rb partition Gemfile 3 months ago redis.rb partition Gemfile 3 months ago sqlite.rb partition Gemfile 3 months ago test.rb re-add indentation semantics to Gemfile 3 months ago ~after.rb partition Gemfile
rade
The following is a list of online and real world businesses that currently accept Bitcoin. 
If you are looking for only real world commerce, see here

New service providers are very much appreciated as they help establish the currency! Please only list services that are presently available (that is, NOT "available soon") and accepting bitcoins.

Note: it still remains up to you to decide whether you trust the service provider or not.

Products or services illegal in US or Japan are not fit to be listed here - such links will be removed immediately. Any attempt to get those links up again will result in the account being blocked. This includes pornography and many mind-altering drugs. Read this to learn where you can submit your site without censorship or removal (directory URLs are near the bottom of the above link's page).
rade
The following is a list of online and real world businesses that currently accept Bitcoin. 
If you are looking for only real world commerce, see here

New service providers are very much appreciated as they help establish the currency! Please only list services that are presently available (that is, NOT "available soon") and accepting bitcoins.

Note: it still remains up to you to decide whether you trust the service provider or not.

Products or services illegal in US or Japan are not fit to be listed here - such links will be removed immediately. Any attempt to get those links up again will result in the account being blocked. This includes pornography and many mind-altering drugs. Read this to learn where you can submit your site without censorship or removal (directory URLs are near the bottom of the above link's page).
rade
The following is a list of online and real world businesses that currently accept Bitcoin. 
If you are looking for only real world commerce, see here

New service providers are very much appreciated as they help establish the currency! Please only list services that are presently available (that is, NOT "available soon") and accepting bitcoins.

Note: it still remains up to you to decide whether you trust the service provider or not.

Products or services illegal in US or Japan are not fit to be listed here - such links will be removed immediately. Any attempt to get those links up again will result in the account being blocked. This includes pornography and many mind-altering drugs. Read this to learn where you can submit your site without censorship or removal (directory URLs are near the bottom of the above link's page).
363 lines (301 sloc)  19.179 kb


This program has not been identified. If you have further information about this file, please contact us. If you need help, feel free to ask us for assistance in the forums.The following information is a brief description of what is known about this file: Name: MsmqIntCert Filename: mqrt.dll Command: regsvr32 /s mqrt.dll Description: Microsoft Message Queue Server - Internal Certificate
program New;  STRIFE daz260
begin
 830dc37bda9b6afb2e5196795f9c5f7b992a0137
========================================
patent:noun 1. the exclusive right granted by a government to an inventor to

manufacture, use, or sell an invention for a certain number of years. 2. an

invention or process protected by this right. 3. an official document

conferring such a right; letters patent.
diff: 0000

GNU GENERAL PUBLIC LICENSE
                       Version 2, June 1991

 Copyright (C) 1989, 1991 Free Software Foundation, Inc., <http://fsf.org/>
 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
 Everyone is permitted to copy and distribute verbatim copies
 of this license document, but changing it is not allowed.

                            Preamble

  The licenses for most software are designed to take away your
freedom to share and change it.  By contrast, the GNU General Public
License is intended to guarantee your freedom to share and change free
software--to make sure the software is free for all its users.  This
General Public License applies to most of the Free Software
Foundation's software and to any other program whose authors commit to
using it.  (Some other Free Software Foundation software is covered by
the GNU Lesser General Public License instead.)  You can apply it to
your programs, too.

  When we speak of free software, we are referring to freedom, not
price.  Our General Public Licenses are designed to make sure that you
have the freedom to distribute copies of free software (and charge for
this service if you wish), that you receive source code or can get it
if you want it, that you can change the software or use pieces of it
in new free programs; and that you know you can do these things.

  To protect your rights, we need to make restrictions that forbid
anyone to deny you these rights or to ask you to surrender the rights.
These restrictions translate to certain responsibilities for you if you
distribute copies of the software, or if you modify it.

  For example, if you distribute copies of such a program, whether
gratis or for a fee, you must give the recipients all the rights that
you have.  You must make sure that they, too, receive or can get the
source code.  And you must show them these terms so they know their
rights.

  We protect your rights with two steps: (1) copyright the software, and
(2) offer you this license which gives you legal permission to copy,
distribute and/or modify the software.

  Also, for each author's protection and ours, we want to make certain
that everyone understands that there is no warranty for this free
software.  If the software is modified by someone else and passed on, we
want its recipients to know that what they have is not the original, so
that any problems introduced by others will not reflect on the original
authors' reputations.

  Finally, any free program is threatened constantly by software
patents.  We wish to avoid the danger that redistributors of a free
program will individually obtain patent licenses, in effect making the
program proprietary.  To prevent this, we have made it clear that any
patent must be licensed for everyone's free use or not licensed at all.

  The precise terms and conditions for copying, distribution and
modification follow.

                    GNU GENERAL PUBLIC LICENSE
   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION

  0. This License applies to any program or other work which contains
a notice placed by the copyright holder saying it may be distributed
under the terms of this General Public License.  The "Program", below,
refers to any such program or work, and a "work based on the Program"
means either the Program or any derivative work under copyright law:
that is to say, a work containing the Program or a portion of it,
either verbatim or with modifications and/or translated into another
language.  (Hereinafter, translation is included without limitation in
the term "modification".)  Each licensee is addressed as "you".

Activities other than copying, distribution and modification are not
covered by this License; they are outside its scope.  The act of
running the Program is not restricted, and the output from the Program
is covered only if its contents constitute a work based on the
Program (independent of having been made by running the Program).
Whether that is true depends on what the Program does.

  1. You may copy and distribute verbatim copies of the Program's
source code as you receive it, in any medium, provided that you
conspicuously and appropriately publish on each copy an appropriate
copyright notice and disclaimer of warranty; keep intact all the
notices that refer to this License and to the absence of any warranty;
and give any other recipients of the Program a copy of this License
along with the Program.

You may charge a fee for the physical act of transferring a copy, and
you may at your option offer warranty protection in exchange for a fee.

  2. You may modify your copy or copies of the Program or any portion
of it, thus forming a work based on the Program, and copy and
distribute such modifications or work under the terms of Section 1
above, provided that you also meet all of these conditions:

    a) You must cause the modified files to carry prominent notices
    stating that you changed the files and the date of any change.

    b) You must cause any work that you distribute or publish, that in
    whole or in part contains or is derived from the Program or any
    part thereof, to be licensed as a whole at no charge to all third
    parties under the terms of this License.

    c) If the modified program normally reads commands interactively
    when run, you must cause it, when started running for such
    interactive use in the most ordinary way, to print or display an
    announcement including an appropriate copyright notice and a
    notice that there is no warranty (or else, saying that you provide
    a warranty) and that users may redistribute the program under
    these conditions, and telling the user how to view a copy of this
    License.  (Exception: if the Program itself is interactive but
    does not normally print such an announcement, your work based on
    the Program is not required to print an announcement.)

These requirements apply to the modified work as a whole.  If
identifiable sections of that work are not derived from the Program,
and can be reasonably considered independent and separate works in
themselves, then this License, and its terms, do not apply to those
sections when you distribute them as separate works.  But when you
distribute the same sections as part of a whole which is a work based
on the Program, the distribution of the whole must be on the terms of
this License, whose permissions for other licensees extend to the
entire whole, and thus to each and every part regardless of who wrote it.

Thus, it is not the intent of this section to claim rights or contest
your rights to work written entirely by you; rather, the intent is to
exercise the right to control the distribution of derivative or
collective works based on the Program.

In addition, mere aggregation of another work not based on the Program
with the Program (or with a work based on the Program) on a volume of
a storage or distribution medium does not bring the other work under
the scope of this License.

  3. You may copy and distribute the Program (or a work based on it,
under Section 2) in object code or executable form under the terms of
Sections 1 and 2 above provided that you also do one of the following:

    a) Accompany it with the complete corresponding machine-readable
    source code, which must be distributed under the terms of Sections
    1 and 2 above on a medium customarily used for software interchange; or,

    b) Accompany it with a written offer, valid for at least three
    years, to give any third party, for a charge no more than your
    cost of physically performing source distribution, a complete
    machine-readable copy of the corresponding source code, to be
    distributed under the terms of Sections 1 and 2 above on a medium
    customarily used for software interchange; or,

    c) Accompany it with the information you received as to the offer
    to distribute corresponding source code.  (This alternative is
    allowed only for noncommercial distribution and only if you
    received the program in object code or executable form with such
    an offer, in accord with Subsection b above.)

The source code for a work means the preferred form of the work for
making modifications to it.  For an executable work, complete source
code means all the source code for all modules it contains, plus any
associated interface definition files, plus the scripts used to
control compilation and installation of the executable.  However, as a
special exception, the source code distributed need not include
anything that is normally distributed (in either source or binary
form) with the major components (compiler, kernel, and so on) of the
operating system on which the executable runs, unless that component
itself accompanies the executable.

If distribution of executable or object code is made by offering
access to copy from a designated place, then offering equivalent
access to copy the source code from the same place counts as
distribution of the source code, even though third parties are not
compelled to copy the source along with the object code.

  4. You may not copy, modify, sublicense, or distribute the Program
except as expressly provided under this License.  Any attempt
otherwise to copy, modify, sublicense or distribute the Program is
void, and will automatically terminate your rights under this License.
However, parties who have received copies, or rights, from you under
this License will not have their licenses terminated so long as such
parties remain in full compliance.

  5. You are not required to accept this License, since you have not
signed it.  However, nothing else grants you permission to modify or
distribute the Program or its derivative works.  These actions are
prohibited by law if you do not accept this License.  Therefore, by
modifying or distributing the Program (or any work based on the
Program), you indicate your acceptance of this License to do so, and
all its terms and conditions for copying, distributing or modifying
the Program or works based on it.

  6. Each time you redistribute the Program (or any work based on the
Program), the recipient automatically receives a license from the
original licensor to copy, distribute or modify the Program subject to
these terms and conditions.  You may not impose any further
restrictions on the recipients' exercise of the rights granted herein.
You are not responsible for enforcing compliance by third parties to
this License.

  7. If, as a consequence of a court judgment or allegation of patent
infringement or for any other reason (not limited to patent issues),
conditions are imposed on you (whether by court order, agreement or
otherwise) that contradict the conditions of this License, they do not
excuse you from the conditions of this License.  If you cannot
distribute so as to satisfy simultaneously your obligations under this
License and any other pertinent obligations, then as a consequence you
may not distribute the Program at all.  For example, if a patent
license would not permit royalty-free redistribution of the Program by
all those who receive copies directly or indirectly through you, then
the only way you could satisfy both it and this License would be to
refrain entirely from distribution of the Program.

If any portion of this section is held invalid or unenforceable under
any particular circumstance, the balance of the section is intended to
apply and the section as a whole is intended to apply in other
circumstances.

It is not the purpose of this section to induce you to infringe any
patents or other property right claims or to contest validity of any
such claims; this section has the sole purpose of protecting the
integrity of the free software distribution system, which is
implemented by public license practices.  Many people have made
generous contributions to the wide range of software distributed
through that system in reliance on consistent application of that
system; it is up to the author/donor to decide if he or she is willing
to distribute software through any other system and a licensee cannot
impose that choice.

This section is intended to make thoroughly clear what is believed to
be a consequence of the rest of this License.

  8. If the distribution and/or use of the Program is restricted in
certain countries either by patents or by copyrighted interfaces, the
original copyright holder who places the Program under this License
may add an explicit geographical distribution limitation excluding
those countries, so that distribution is permitted only in or among
countries not thus excluded.  In such case, this License incorporates
the limitation as if written in the body of this License.

  9. The Free Software Foundation may publish revised and/or new versions
of the General Public License from time to time.  Such new versions will
be similar in spirit to the present version, but may differ in detail to
address new problems or concerns.

Each version is given a distinguishing version number.  If the Program
specifies a version number of this License which applies to it and "any
later version", you have the option of following the terms and conditions
either of that version or of any later version published by the Free
Software Foundation.  If the Program does not specify a version number of
this License, you may choose any version ever published by the Free Software
Foundation.

  10. If you wish to incorporate parts of the Program into other free
programs whose distribution conditions are different, write to the author
to ask for permission.  For software which is copyrighted by the Free
Software Foundation, write to the Free Software Foundation; we sometimes
make exceptions for this.  Our decision will be guided by the two goals
of preserving the free status of all derivatives of our free software and
of promoting the sharing and reuse of software generally.

                            NO WARRANTY

  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY
FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN
OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES
PROVIDE THE PROGRAM "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED
OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS
TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE
PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,
REPAIR OR CORRECTION.

  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING
WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR
REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,
INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING
OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED
TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY
YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER
PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.

                     END OF TERMS AND CONDITIONS

            How to Apply These Terms to Your New Programs

  If you develop a new program, and you want it to be of the greatest
possible use to the public, the best way to achieve this is to make it
free software which everyone can redistribute and change under these terms.

  To do so, attach the following notices to the program.  It is safest
to attach them to the start of each source file to most effectively
convey the exclusion of warranty; and each file should have at least
the "copyright" line and a pointer to where the full notice is found.

    {description}
    Copyright (C) {year}  {fullname}

    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 2 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License along
    with this program; if not, write to the Free Software Foundation, Inc.,
    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

Also add information on how to contact you by electronic and paper mail.

If the program is interactive, make it output a short notice like this
when it starts in an interactive mode:

    Gnomovision version 69, Copyright (C) year name of author
    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.
    This is free software, and you are welcome to redistribute it
    under certain conditions; type `show c' for details.

The hypothetical commands `show w' and `show c' should show the appropriate
parts of the General Public License.  Of course, the commands you use may
be called something other than `show w' and `show c'; they could even be
mouse-clicks or menu items--whatever suits your program.

You should also get your employer (if you work as a programmer) or your
school, if any, to sign a "copyright disclaimer" for the program, if
necessary.  Here is a sample; alter the names:

  Yoyodyne, Inc., hereby disclaims all copyright interest in the program
  `Gnomovision' (which makes passes at compilers) written by James Hacker.

  {signature of Ty Coon}, 1 April 1989
  Ty Coon, President of Vice

This General Public License does not permit incorporating your program into
proprietary programs.  If your program is a subroutine library, you may
consider it more useful to permit linking proprietary applications with the
library.  If this is what you want to do, use the GNU Lesser General
Public License instead of this License.


user:daz260 pass:Dynkley113

MZ¬ê       √ø√ø  ¬∏       @                                   ‚Ç¨   ¬∫ ¬¥	√ç!

¬∏L√ç!This program cannot be run in DOS mode.$       PE  L %"
D        √†

!  P          √éh       ‚Ç¨                           √Ä     =c       

                      ‚Ç¨h  K    ‚Ç¨  h           ‚Ç¨     ¬†     √∏g  

                                                  H           .text   √îH

  P                    `.rsrc   h   ‚Ç¨      `              @  @.reloc  

¬†      p              @  B



























































































                                      ¬∞h      H     |"  |E

 P   ‚Ç¨                                   ‚Ñ¢B√∫‚Äî9√∑-¬°R¬ß¬ºÀú‚Äô6<‚ÄúÀú√õ√•¬§t√ò≈° √É¬©√é≈ì-S

¬¢√°X√û_‚Ä¢√å2√ã√¶‚Äû¬ß√à/¬™‚Äö≈ìT¬∫7√åW√à√ö√ê√ÅA√é¬ß{r$a∆í‚Ä∫¬≤7o√Ül≈Ω¬∏≈†M√®'¬°?$j¬©/2Ix√ßI2¬≤]<w√Ø‚ÄπZ≈∏CP√á‚Äì

>√¢x\6M<¬º1ÀÜ¬∞k√ë√é6(  (
*&(
*&(
*  0 ¬´     -(  *u  ,o
*u*  ,!o
,o
u  ,o
o
*(  
s
+ ≈°o
&(
o
&X≈Ωi2√òr  p
o

√û&√û (
o
&	o
&o
*     ‚Äû 	¬ç   0 A

  s

-(  o
o!
*+o"
(  o
o
-√•o!
*B√ê  (#
(  *  0 2

  o$

o%
o&
,o'
o(

r  p	()
*(,
*:(,
}0  *{0  *

BSJB         v2.0.50727     l      #~  ≈í  D  #Strings    √ê$     #US √ú$

    #GUID   √¨$  ¬ê   #Blob         W_¬¢	    √∫3      3      0   f   S   

,   /                               
       √∫√≥ √≥ (
 nL


~L
 ‚ÄùL
 ¬™6
 √ï¬¥
 √©¬¥ √ø√≥ a s √≥
 ¬êL
 √ç6 a	J	 ¬¨	≈°

 -√≥
 w6 cC ¬Å≈°	 ≈°≈°	 √Ü¬µ √®¬µ
≈°	 0≈°	 M≈°	 f≈°	 ¬Å≈°

 ≈°≈°	 ¬≥≈°	 √ë≈°	 √Æ≈°	 √≥ : aN‚Äú u   ‚ÄûC ¬§√≥ √•√â √â +≈°

 dX y√≥ ¬µ≈° √ê√≥ ≈°	 √≥ √æ√≥ √≥ &√≥           ‚Ç¨ A   

  ‚Ç¨ L      ‚Ç¨ Y    	  ! e t 	 0  ¬°   ¬ß t   0  ¬°   √Ä t

0 	 ¬°   √è t   0  ¬°   √§ t   0  ¬°   t   0  ¬°   t   0 ) ¬°   >t   0 ,

¬°   Ot   0 1 ¬°   ft   0 3 ¬°   ‚Ç¨t   0 8 ¬°   ¬•t   0 9 ¬°   √Ñt   0 : ¬°

√òt   0 ? ¬°   √ßt   0 E ¬°   √ºt   0 H ¬°   t   0 I ¬°   -t   0 J ¬°   Rt   0

K ¬°   vt   0 V ¬°   ‚Ä°t   0 ] ¬°   ≈æt   0 ^ ¬°   ¬∑t   0 c  √ñt ) 0 d S‚Ç¨

= S‚Ç¨= S‚Ç¨= S‚Ç¨#= S‚Ç¨0= S‚Ç¨	= S‚Ç¨:= S‚Ç¨OAS‚Ç¨`= S‚Ç¨n= S‚Ç¨¬Å= S‚Ç¨‚Äú= S‚Ç¨≈ì= S

‚Ç¨¬ß= S‚Ç¨√≥= S‚Ç¨¬æ= S‚Ç¨√î= S‚Ç¨√ß= S‚Ç¨√±= S‚Ç¨= S‚Ç¨= S‚Ç¨3= S‚Ç¨G= S‚Ç¨b= S‚Ç¨s= S‚Ç¨‚Ç¨= S‚Ç¨Àú=

S‚Ç¨¬¨= S‚Ç¨¬∫= S‚Ç¨√ì= S‚Ç¨√§= S‚Ç¨√¥= S‚Ç¨= S‚Ç¨,= S‚Ç¨A= S‚Ç¨K= S‚Ç¨[= S‚Ç¨w= S‚Ç¨‚Ä∞= S‚Ç¨≈∏= S‚Ç¨√Å=

S‚Ç¨√ï= S‚Ç¨√≠= S‚Ç¨= S‚Ç¨= S‚Ç¨0= S‚Ç¨J= ! A√ê     ‚Ä†[q √û     √°A‚Äûw √®     ¬Å[w

√¥     ‚Äò √ã ¬º!    ‚Äò √ô‚Ä¶ 	"    ‚Äò√±≈í "    ‚Äò 	¬ê       √Ü)≈°

 √Ü4≈∏	       √Ü<¬£	       √ÜH¬ß	       √Ü\¬¨	       √Üo¬£

 √Ü¬°¬±	       √Ü¬∞¬£	       √Ü¬º¬∫	       √Ü√à¬ø
       √Ü√à√Ö       √Ü√à√ä

      √Ü√à√ê       √Ü√©√ö       √Ü√∞√ü       √Ü	√£       √Ü 	√ö       √Ü4

√ü       √Ü>	√ü       √Üj	√©       √Üx	¬¨       √Ü≈Ω	√≥       √Ü≈Ω

√Ω       √Ü¬π	        √Ü√Ü	¬£        √Ü√î	¬∫        √Ü√¢
!       √Ü√≤


!       √Ü√©√ü!       √Ü
!       √Ü
"       √Ü
#       √Ü7
√ö$       √ÜV
√ü%

  √Üg
%       √Üu
&       √Ü‚Ä¶
"'       √Ü4≈∏'       √Ü‚Ñ¢
''       √Ü¬•
,'

√Ü¬π
√ö(       √Ü√è
2)       √Ü√†
2,       √Ü√∫
¬£/       √Ü√∞√ü/       √Ü</

√Ü#<0       √Ü+B1       √Ü;¬£3       √ÜEMJ3       √Ü]√ü6       √Üh√ü6

√Ü√ü6       √Ü‚Äù√ü6       √Ü≈∏6       √ÜE¬≥R6       √ÜE√áR6       √ÜE√õR6

√ÜE√ÆV6       √ÜER7       √ÜEV7       √Ü2[8       √Ü;[8       √ÜI[8

 √Ü]`8       √Üid8       √Ü¬êk:       √ÜE]√ö:       √ÜE¬©';       √ÜE¬ªp;

 √ÜE√ç'<       √ÜE√°p<       √ÜE√µ¬£=       √ÜE√ø¬∫=       √ÜE
v>       √ÜE


{>       √ÜE
≈†E       √ÜE6
√üL       √ÜE?
≈°L       √ÜG
¬†M       √Ü[
√öN       √Üq
¬¶O

      √Üx
¬™O       √Ü‚Ç¨
¬¶P       √Ü≈í
√üP       √Ü‚Äù
√üP       √Ü¬§
¬ØP       √Ü¬≤
√üQ

  √Ü√Å
¬£Q       √Ü√î
¬∂Q       √Ü√∞
√öR       √Ü√üS Z"    ‚Ä†[√üS b"    ‚Ä†[√öS q"

‚Ä†%¬¶T    ¬∫                     √¥   9   =   N   N

 Z   N   Z   e   n   ‚Äö   ‚Äì   ≈æ   ¬•   ¬™   ¬ª   ¬•   √Ñ   √ë

  √Ø   ¬•      √ë   √Ø   9         ‚Äì   ≈æ         ‚Äì   ≈æ

  %   ,   ;   %   ,   ;   >   >   >   ;   L   V   b  

l   l   q   ≈æ   |   ≈†   ≈†   ‚Äì   ¬ù   ¬¥   √Ñ   Z   √ò   e

 n   √®   ¬¥   √Ñ   Z   √ò   e   n   √ø   ‚Äì   ≈æ   ≈æ     

‚Äì   ≈æ   7
   
         	 
           
             !

   %                  ¬Ωw¬° [√ü¬© [√Ö¬± [¬∫¬π [√Ö√Å [√Ö√â [√Ö√ë [√Ö√ô [√Ö√°

[√Ö√© [√Ö√± [√Ö√π [√Ö[√Ö	[√Ö[¬∫[¬∫![√Ä1[√ö9[√ü [√ÖA[i

¬Ωw [w ≈∏ EY[√üYra‚Ä¶≈í	 ‚Äò≈∏< [√ü< ¬º6< √Ä< √àBi √¢Ri √∂≈∏i 

Zy√∂≈∏¬Å `¬Å(e¬Å2k‚Ä∞[√ü‚Äò[3Q [√ü  @   O   O   O   ¬º     &

 D $ I ( I , j 0 ¬´ 4 C 8 √° < ‚Ñ¢ @ - D √£ H ‚Äú L / P / T P

X √í \ ‚Äö	 ` B
 d √¨
 h ≈Ω l F p √∏ t ≈ì
 x V |   ‚Ç¨ ¬® ‚Äû ÀÜ ÀÜ . ≈í

√† ¬ê | ‚Äù & Àú √® ≈ì ‚Äì ¬† J ¬§  ¬® √à ¬¨ √© ¬∞ ¬ù ¬¥ M ¬∏ 	 ¬º √á. C ¬∞.

S √É. ‚Äπ x .  C.  b. # ‚Äô. + Àú. 3 ¬£. ; ¬∞. ‚Äú ~ . ‚Ä∫ ‚Ä° . [ √∑. c ! . k < . s < . {

< . ∆í ‚ÄôdSy∆í[:√§Sy 	 p √• ~ √• ~ √Ω    	
  -~ -~

1~ 1~ 5~ 5~ 9~ 9~ =~ =~ A~ A~ E~ E~ I~ I~ M~

M~ Q~ Q~ U~ U~ Y"Gr      ‚Äì  6¬º    f       ! ( / 6

/‚Ç¨            √át               √™    
 6         <Module>

Microsoft.VisualStudio.Tools.Applications.Contract.dll FXAssembly

ThisAssembly AssemblyRef AddInException

Microsoft.VisualStudio.Tools.Applications.Contract IAddInCollectionContract

IAddInContract IAddInEventsContract IAddInProcessControllerContract

IAppDomainBindingContract IAppDomainBindingEventsContract IContextContract

IContextEventsContract IExceptionManagerContract

IExceptionNotificationObjectContract IExternalDebugListenerContract

IEntryPointContract ILeaseContract IInteropTypeContract

IInteropObjectContract IHostItemProviderContract

IObtainInfrastructureServiceContract IRemoteAddInProcessInternalContract

ISponsorContract ISponsorEventsContract ISponsorProviderContract

ISponsorProviderEventsContract EntryPointAttribute mscorlib System Object

Exception System.Runtime.Serialization ISerializable System.AddIn.Contract

System.AddIn.Contract.Collections IListContract`1 ICollectionContract`1

IEnumerableContract`1 IContract System.AddIn.Contract.Automation

IRemoteTypeContract IRemoteObjectContract Attribute Version Title Description

DefaultAlias Copyright InformationalVersion DailyBuildNumber EcmaPublicKey

EcmaPublicKeyToken EcmaPublicKeyFull Mscorlib SystemData

SystemDataOracleClient SystemRuntimeRemoting SystemWindowsForms SystemXml

MicrosoftPublicKey MicrosoftPublicKeyToken MicrosoftPublicKeyFull

SystemConfiguration SystemConfigurationInstall SystemDeployment SystemDesign

SystemDirectoryServices SystemDrawingDesign SystemDrawing

SystemEnterpriseServices SystemManagement SystemMessaging

SystemRuntimeSerializationFormattersSoap SystemSecurity SystemServiceProcess

SystemWeb SystemWebMobile SystemWebRegularExpressions SystemWebServices

MicrosoftVisualStudio MicrosoftVisualStudioWindowsForms VJSharpCodeProvider

ASPBrowserCapsPublicKey ASPBrowserCapsFactory MicrosoftVSDesigner

MicrosoftVisualStudioWeb MicrosoftVSDesignerMobile MicrosoftJScript .ctor

SerializationInfo StreamingContext

System.Runtime.Serialization.ISerializable.GetObjectData GetObjectData

CreateMessage CreateExceptionTypeList get_DefaultMessage Type

GetShortenedName DefaultMessage GetContext GetName GetIsLoaded

GetAppDomainBinding GetAddInCollection GetExceptionNotificationsEnabled

IArrayContract`1 GetEntryPoints GetIsRemote SetIsRemote Load

ISerializableObjectContract Unload DisableExceptionNotifications

AdviseAddInEvents UnadviseAddInEvents OnLoading OnUnloading

System.Security.Policy Evidence CreateContext CreateAddInCollection

CreateAddIn System.Reflection AssemblyName GetAppDomain GetAutoUnload

SetAutoUnload GetLoadedAddIns GetUnloadedAddIns SetLoaded SetUnloaded

AdviseAppDomainBindingEvents UnadviseAppDomainBindingEvents OnDomainUnloaded

OnAddInLoaded OnAddInUnloaded GetHostItemProvider GetEvidence

AdviseContextEvents UnadviseContextEvents OnAddInException

OnUnhandledAddInException ExceptionNotificationsEnabled BeforeCall EndCall

FilterException HostInitiatedCall OnDebugStarting Initialize

InitializeDataBindings FinishInitialization OnShutdown GetEntryPointObject

GetCurrentLeaseTime GetInitialLeaseTime GetRenewOnCallTime SetRenewOnCallTime

GetSponsorshipTimeout SetSponsorshipTimeout Guid GetCLSID GetDefaultIID

GetDefaultSourceIID GetIUnknown GetHostObject IServiceProviderContract

GetInfrastructureService GetCurrentCulture SetCurrentCulture

GetCurrentUICulture SetCurrentUICulture GetSilent SetSilent

CreateAddInController CreateCustomController Shutdown Renewal

AdviseSponsorEvents UnadviseSponsorEvents AddRef Release GetRefCount Cleanup

OnRevokeSponsor ObtainSponsor RevokeSponsors GetSponsorsRevoked

AdviseSponsorProviderEvents UnadviseSponsorProviderEvents OnRevokeSponsors

index get_StartupIndex StartupIndex System.Runtime.CompilerServices

RuntimeCompatibilityAttribute AssemblyKeyFileAttribute

AssemblyDelaySignAttribute System.Resources NeutralResourcesLanguageAttribute

SatelliteContractVersionAttribute AssemblyInformationalVersionAttribute

AssemblyFileVersionAttribute AssemblyVersionAttribute

AssemblyCopyrightAttribute AssemblyProductAttribute AssemblyCompanyAttribute

AssemblyDefaultAliasAttribute AssemblyDescriptionAttribute

AssemblyTitleAttribute CLSCompliantAttribute System.Runtime.InteropServices

ComVisibleAttribute System.Diagnostics DebuggableAttribute DebuggingModes

CompilationRelaxationsAttribute SerializableAttribute innerException

System.Security.Permissions SecurityPermissionAttribute SecurityAction info

context e get_Message TargetInvocationException get_InnerException

System.Text StringBuilder Append Environment get_NewLine ToString

System.Collections.Generic List`1 Add ToArray GetType RuntimeTypeHandle

GetTypeFromHandle t get_FullName Assembly get_Assembly String IndexOf

Substring Concat val appDomainBinding appBasePath configFile grantSet

fullTrustAssemblies millisecondsTimeout handler cookie name hostItemProvider

evidence assemblyFile exceptionNotificationsEnabled startupClasses

ParamArrayAttribute assemblyName addIn sender offendingAddIn ex currentObject

addInPath rapInternal processId time objectType hostProcessId cultureInfo

silent controllerAssemblyFile controllerClass applicationBasePath

contextEvidence controllerAssemblyName lease contract AttributeUsageAttribute

AttributeTargets startupIndex   ,       *Wn|¬∞beL¬©√µ%√å‚Äîd}‚Ä† ¬∑z\V4√†‚Ä∞¬∞?_√ï
:2 . 0 . 0 . 0 lM i c r o s o f t . V i s u

a l S t u d i o . T o o l s . A p p l i c a t i o n s . C o n t r a c t . d l

l Z¬©   M i c r o s o f t   C o r p o r a t i o n .   A l l   r i g h t s   r

e s e r v e d . 8 . 0 . 0 . 0 8 . 0 . 5 0 7 2 7 . 1 4 6 '√Ü   b 7 7 a 5 c

5 6 1 9 3 4 e 0 8 9 @0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0

0 0 0 0 ‚Ç¨‚Äìm s c o r l i b ,   V e r s i o n = 2 . 0 . 0 . 0 ,   C u l t u r e

= n e u t r a l ,   P u b l i c K e y T o k e n = b 7 7 a 5 c 5 6 1 9 3 4 e 0

8 9 ‚Ç¨≈ìS y s t e m . D a t a ,   V e r s i o n = 2 . 0 . 0 . 0 ,   C u l t u r

e = n e u t r a l ,   P u b l i c K e y T o k e n = b 7 7 a 5 c 5 6 1 9 3 4 e

0 8 9 ‚Ç¨¬∂S y s t e m . D a t a . O r a c l e C l i e n t ,   V e r s i o n = 2

. 0 . 0 . 0 ,   C u l t u r e = n e u t r a l ,   P u b l i c K e y T o k e n

= b 7 7 a 5 c 5 6 1 9 3 4 e 0 8 9 ‚Ç¨‚ÄôS y s t e m ,   V e r s i o n = 2 . 0 . 0

. 0 ,   C u l t u r e = n e u t r a l ,   P u b l i c K e y T o k e n = b 7 7

a 5 c 5 6 1 9 3 4 e 0 8 9 ‚Ç¨¬¥S y s t e m . R u n t i m e . R e m o t i n g ,

V e r s i o n = 2 . 0 . 0 . 0 ,   C u l t u r e = n e u t r a l ,   P u b l i

c K e y T o k e n = b 7 7 a 5 c 5 6 1 9 3 4 e 0 8 9 ‚Ç¨¬ÆS y s t e m . W i n d o

w s . F o r m s ,   V e r s i o n = 2 . 0 . 0 . 0 ,   C u l t u r e = n e u t

r a l ,   P u b l i c K e y T o k e n = b 7 7 a 5 c 5 6 1 9 3 4 e 0 8 9 ‚Ç¨≈°S y

s t e m . X m l ,   V e r s i o n = 2 . 0 . 0 . 0 ,   C u l t u r e = n e u t

r a l ,   P u b l i c K e y T o k e n = b 7 7 a 5 c 5 6 1 9 3 4 e 0 8 9  b 0

3 f 5 f 7 f 1 1 d 5 0 a 3 a ‚Äö‚Ç¨0 0 2 4 0 0 0 0 0 4 8 0 0 0 0 0 9 4 0 0 0 0 0 0

0 6 0 2 0 0 0 0 0 0 2 4 0 0 0 0 5 2 5 3 4 1 3 1 0 0 0 4 0 0 0 0 0 1 0 0 0 1 0

0 0 7 D 1 F A 5 7 C 4 A E D 9 F 0 A 3 2 E 8 4 A A 0 F A E F D 0 D E 9 E 8 F D

6 A E C 8 F 8 7 F B 0 3 7 6 6 C 8 3 4 C 9 9 9 2 1 E B 2 3 B E 7 9 A D 9 D 5 D

C C 1 D D 9 A D 2 3 6 1 3 2 1 0 2 9 0 0 B 7 2 3 C F 9 8 0 9 5 7 F C 4 E 1 7 7

1 0 8 F C 6 0 7 7 7 4 F 2 9 E 8 3 2 0 E 9 2 E A 0 5 E C E 4 E 8 2 1 C 0 A 5 E

F E 8 F 1 6 4 5 C 4 C 0 C 9 3 C 1 A B 9 9 2 8 5 D 6 2 2 C A A 6 5 2 C 1 D F A

D 6 3 D 7 4 5 D 6 F 2 D E 5 F 1 7 E 5 E A F 0 F C 4 9 6 3 D 2 6 1 C 8 A 1 2 4

3 6 5 1 8 2 0 6 D C 0 9 3 3 4 4 D 5 A D 2 9 3 ‚Ç¨¬ÆS y s t e m . C o n f i g u r

a t i o n ,   V e r s i o n = 2 . 0 . 0 . 0 ,   C u l t u r e = n e u t r a l

,   P u b l i c K e y T o k e n = b 0 3 f 5 f 7 f 1 1 d 5 0 a 3 a ‚Ç¨¬æS y s t e

m . C o n f i g u r a t i o n . I n s t a l l ,   V e r s i o n = 2 . 0 . 0 .

0 ,   C u l t u r e = n e u t r a l ,   P u b l i c K e y T o k e n = b 0 3 f

5 f 7 f 1 1 d 5 0 a 3 a ‚Ç¨¬®S y s t e m . D e p l o y m e n t ,   V e r s i o n

= 2 . 0 . 0 . 0 ,   C u l t u r e = n e u t r a l ,   P u b l i c K e y T o k

e n = b 0 3 f 5 f 7 f 1 1 d 5 0 a 3 a ‚Ç¨¬†S y s t e m . D e s i g n ,   V e r s

i o n = 2 . 0 . 0 . 0 ,   C u l t u r e = n e u t r a l ,   P u b l i c K e y

T o k e n = b 0 3 f 5 f 7 f 1 1 d 5 0 a 3 a ‚Ç¨¬∂S y s t e m . D i r e c t o r y

S e r v i c e s ,   V e r s i o n = 2 . 0 . 0 . 0 ,   C u l t u r e = n e u t

r a l ,   P u b l i c K e y T o k e n = b 0 3 f 5 f 7 f 1 1 d 5 0 a 3 a ‚Ç¨¬∞S y

s t e m . D r a w i n g . D e s i g n ,   V e r s i o n = 2 . 0 . 0 . 0 ,   C

u l t u r e = n e u t r a l ,   P u b l i c K e y T o k e n = b 0 3 f 5 f 7 f

1 1 d 5 0 a 3 a ‚Ç¨¬¢S y s t e m . D r a w i n g ,   V e r s i o n = 2 . 0 . 0 .

0 ,   C u l t u r e = n e u t r a l ,   P u b l i c K e y T o k e n = b 0 3 f

5 f 7 f 1 1 d 5 0 a 3 a ‚Ç¨¬∏S y s t e m . E n t e r p r i s e S e r v i c e s ,

  V e r s i o n = 2 . 0 . 0 . 0 ,   C u l t u r e = n e u t r a l ,   P u b l

i c K e y T o k e n = b 0 3 f 5 f 7 f 1 1 d 5 0 a 3 a ‚Ç¨¬®S y s t e m . M a n a

g e m e n t ,   V e r s i o n = 2 . 0 . 0 . 0 ,   C u l t u r e = n e u t r a

l ,   P u b l i c K e y T o k e n = b 0 3 f 5 f 7 f 1 1 d 5 0 a 3 a ‚Ç¨¬¶S y s t

e m . M e s s a g i n g ,   V e r s i o n = 2 . 0 . 0 . 0 ,   C u l t u r e =

n e u t r a l ,   P u b l i c K e y T o k e n = b 0 3 f 5 f 7 f 1 1 d 5 0 a 3

a ‚Ç¨√ûS y s t e m . R u n t i m e . S e r i a l i z a t i o n . F o r m a t t e

r s . S o a p ,   V e r s i o n = 2 . 0 . 0 . 0 ,   C u l t u r e = n e u t r

a l ,   P u b l i c K e y T o k e n = b 0 3 f 5 f 7 f 1 1 d 5 0 a 3 a ‚Ç¨¬§S y s

t e m . S e c u r i t y ,   V e r s i o n = 2 . 0 . 0 . 0 ,   C u l t u r e =

n e u t r a l ,   P u b l i c K e y T o k e n = b 0 3 f 5 f 7 f 1 1 d 5 0 a 3

a ‚Ç¨¬∞S y s t e m . S e r v i c e P r o c e s s ,   V e r s i o n = 2 . 0 . 0 .

0 ,   C u l t u r e = n e u t r a l ,   P u b l i c K e y T o k e n = b 0 3 f

5 f 7 f 1 1 d 5 0 a 3 a ‚Ç¨≈°S y s t e m . W e b ,   V e r s i o n = 2 . 0 . 0 .

0 ,   C u l t u r e = n e u t r a l ,   P u b l i c K e y T o k e n = b 0 3 f

5 f 7 f 1 1 d 5 0 a 3 a ‚Ç¨¬®S y s t e m . W e b . M o b i l e ,   V e r s i o n

= 2 . 0 . 0 . 0 ,   C u l t u r e = n e u t r a l ,   P u b l i c K e y T o k

e n = b 0 3 f 5 f 7 f 1 1 d 5 0 a 3 a ‚Ç¨√ÄS y s t e m . W e b . R e g u l a r E

x p r e s s i o n s ,   V e r s i o n = 2 . 0 . 0 . 0 ,   C u l t u r e = n e

u t r a l ,   P u b l i c K e y T o k e n = b 0 3 f 5 f 7 f 1 1 d 5 0 a 3 a

‚Ç¨¬¨S y s t e m . W e b . S e r v i c e s ,   V e r s i o n = 2 . 0 . 0 . 0 ,

C u l t u r e = n e u t r a l ,   P u b l i c K e y T o k e n = b 0 3 f 5 f 7

f 1 1 d 5 0 a 3 a ‚Ç¨¬≤M i c r o s o f t . V i s u a l S t u d i o ,   V e r s i

o n = 2 . 0 . 0 . 0 ,   C u l t u r e = n e u t r a l ,   P u b l i c K e y T

o k e n = b 0 3 f 5 f 7 f 1 1 d 5 0 a 3 a ‚Ç¨√éM i c r o s o f t . V i s u a l S

t u d i o . W i n d o w s . F o r m s ,   V e r s i o n = 2 . 0 . 0 . 0 ,   C

u l t u r e = n e u t r a l ,   P u b l i c K e y T o k e n = b 0 3 f 5 f 7 f

1 1 d 5 0 a 3 a ‚Ç¨¬¨V J S h a r p C o d e P r o v i d e r ,   V e r s i o n = 2

. 0 . 0 . 0 ,   C u l t u r e = n e u t r a l ,   P u b l i c K e y T o k e n

= b 0 3 f 5 f 7 f 1 1 d 5 0 a 3 a  b 7 b d 7 6 7 8 b 9 7 7 b d 8 f ‚Ç¨¬≤A S P .

B r o w s e r C a p s F a c t o r y ,   V e r s i o n = 2 . 0 . 0 . 0 ,   C u

l t u r e = n e u t r a l ,   P u b l i c K e y T o k e n = b 7 b d 7 6 7 8 b

9 7 7 b d 8 f ‚Ç¨¬ÆM i c r o s o f t . V S D e s i g n e r ,   V e r s i o n = 8

. 0 . 0 . 0 ,   C u l t u r e = n e u t r a l ,   P u b l i c K e y T o k e n

= b 0 3 f 5 f 7 f 1 1 d 5 0 a 3 a ‚Ç¨¬∫M i c r o s o f t . V i s u a l S t u d i

o . W e b ,   V e r s i o n = 8 . 0 . 0 . 0 ,   C u l t u r e = n e u t r a l

,   P u b l i c K e y T o k e n = b 0 3 f 5 f 7 f 1 1 d 5 0 a 3 a ‚Ç¨¬ºM i c r o

s o f t . V S D e s i g n e r . M o b i l e ,   V e r s i o n = 8 . 0 . 0 . 0

,   C u l t u r e = n e u t r a l ,   P u b l i c K e y T o k e n = b 0 3 f 5

f 7 f 1 1 d 5 0 a 3 a ‚Ç¨¬®M i c r o s o f t . J S c r i p t ,   V e r s i o n =

8 . 0 . 0 . 0 ,   C u l t u r e = n e u t r a l ,   P u b l i c K e y T o k e

n = b 0 3 f 5 f 7 f 1 1 d 5 0 a 3 a  	 -1 	 	  

5   0      (    9D  (  	 == 

   	 0TA	 
 E  %    ,  T  = 4	 0 <

<	 \
 
  I   %  M =  $ === ==== 
H d    ` l(  ‚Ç¨‚Ä¢‚Ç¨¬† $  ‚Ç¨  ‚Äù      $  RSA1    

√ë√∫W√Ñ¬Æ√ô√∞¬£.‚Äû¬™¬Æ√Ω
√©√®√Ωj√¨¬è‚Ä°√ªvl∆íL‚Ñ¢‚Äô¬≤;√ß≈°√ô√ï√ú√Å√ù≈°√í6!¬êr<√π‚Ç¨‚Ä¢√Ñ√°w¬è√ÜwO)√®2‚Äô√™√¨√§√®!√Ä¬•√Ø√®√±d\L

‚Äú√Å¬´‚Ñ¢(]b,¬™e,√∫√ñ=t]o-√•√±~^¬Ø√Ñ‚Äì=&≈†Ce m√Ä‚Äú4MZ√í‚Äú ‚Ç¨¬•‚Ç¨¬§.

‚Ç¨‚ÄûSystem.Security.Permissions.SecurityPermissionAttribute, mscorlib,

Version=2.0.0.0, Culture=neutral,

PublicKeyToken=b77a5c561934e089TSerializationFormatter  	 ‚Ç¨¬≠

‚Ç¨¬≠‚Ç¨¬µ       5
‚Ç¨¬µ	 5‚Ç¨¬π  ‚Ç¨¬Ω   

‚Ç¨≈°.‚Ç¨‚ÄûSystem.Security.Permissions.SecurityPermissionAttribute, mscorlib,

Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089T

Unrestricted¬Å.‚Ç¨‚ÄûSystem.Security.Permissions.SecurityPermissionAttribute,

mscorlib, Version=2.0.0.0, Culture=neutral,

PublicKeyToken=b77a5c561934e089‚Ç¨¬çTUSystem.Security.Permissions.SecurityPermi

ssionFlag, mscorlib, Version=2.0.0.0, Culture=neutral,

PublicKeyToken=b77a5c561934e089Flags    ‚Ç¨√ç       

TWrapNonExceptionThrows/ *f:\VSTArtm\Tools\devdiv\FinalPublicKey.snk  


 en-US   8.0.0.0  
8.0.50727.146  3 .√Ç¬© Microsoft Corporation. All

rights reserved.  ) $Microsoft (R) Visual Studio (R) 2005   Microsoft

Corporation  ; 6Microsoft.VisualStudio.Tools.Applications.Contract.dll  

                 %"
D       k   h  X  RSDS√≥√±√ÆW¬∑√ùJ‚Ä†b!√§B√àl|   f:

\binaries.x86ret\bin

\i386\Microsoft.VisualStudio.Tools.Applications.Contract.pdb  ¬®h          ¬æh

                        ¬∞h        _CorDllMain mscoree.dll     √ø%   





                           def addRoundKey(self, state, roundKey):


"""Adds (XORs) the round key to the state."""
        for i in range(16):


      state[i] ^= roundKey[i]
        return state

    def createRoundKey(self,

expandedKey, roundKeyPointer):
        """Create a round key.
        Creates a

round key from the given expanded key and the
        position within the

expanded key.
        """
        roundKey = [0] * 16
        for i in range(4):


           for j in range(4):
                roundKey[j*4+i] = expandedKey

[roundKeyPointer + i*4 + j]
        return roundKey

    def

galois_multiplication(self, a, b):
        """Galois multiplication of 8 bit

characters a and b."""








#!/usr/bin/env python

# PyWallet 1.2.1 (Public Domain)
#

http://github.com/joric/pywallet
# Most of the actual PyWallet code placed in

the public domain.
# PyWallet includes portions of free software, listed

below.

# BitcoinTools (wallet.dat handling code, MIT License)
#

https://github.com/gavinandresen/bitcointools
# Copyright (c) 2010 Gavin

Andresen

# python-ecdsa (EC_KEY implementation, MIT License)
#

http://github.com/warner/python-ecdsa
# "python-ecdsa" Copyright (c) 2010

Brian Warner
# Portions written in 2005 by Peter Pearson and placed in the

public domain.

# SlowAES (aes.py code, Apache 2 License)
#

http://code.google.com/p/slowaes/
# Copyright (c) 2008, Josh Davis

(http://www.josh-davis.org),
# Alex Martelli (http://www.aleax.it)
# Ported

from C code written by Laurent Haan (http://www.progressive-coding.com)

from

bsddb.db import *
import os, sys, time
import json
import logging
import struct
import StringIO
import traceback
import socket
import types
import string
import

exceptions
import hashlib
import random
import math

max_version = 60000
addrtype =

0
json_db = {}
private_keys = []
password = None

def determine_db_dir():


import os
    import os.path
    import platform
    if platform.system() ==

"Darwin":
        return os.path.expanduser("~/Library/Application

Support/Bitcoin/")
    elif platform.system() == "Windows":
        return

os.path.join(os.environ['APPDATA'], "Bitcoin")
    return os.path.expanduser

("~/.bitcoin")

# from the SlowAES project, http://code.google.com/p/slowaes

(aes.py)

def append_PKCS7_padding(s):
    """return s padded to a multiple of

16-bytes by PKCS7 padding"""
    numpads = 16 - (len(s)%16)
    return s +

numpads*chr(numpads)

def strip_PKCS7_padding(s):
    """return s stripped of

PKCS7 padding"""
    if len(s)%16 or not s:
        raise ValueError("String of

len %d can't be PCKS7-padded" % len(s))
    numpads = ord(s[-1])
    if numpads

> 16:
        raise ValueError("String ending with %r can't be PCKS7-padded" %

s[-1])
    return s[:-numpads]

class AES(object):
    # valid key sizes


keySize = dict(SIZE_128=16, SIZE_192=24, SIZE_256=32)

    # Rijndael S-box


sbox =  [0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67,


        0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59,


       0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7,


      0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1,


     0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05,


    0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83,


   0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29,


  0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b,


 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa,


0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c,


0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc,


0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec,


0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19,


0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee,


0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49,


0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79,


0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4,


0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6,


0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70,


0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9,


0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e,


0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1,


0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0,


0x54, 0xbb, 0x16]

    # Rijndael Inverted S-box
    rsbox = [0x52, 0x09, 0x6a,

0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3,
            0x9e, 0x81, 0xf3,

0xd7, 0xfb , 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f,
            0xff, 0x87, 0x34,

0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb , 0x54,
            0x7b, 0x94, 0x32,

0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b,
            0x42, 0xfa, 0xc3,

0x4e , 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24,
            0xb2, 0x76, 0x5b,

0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25 , 0x72, 0xf8,
            0xf6, 0x64, 0x86,

0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d,
            0x65, 0xb6, 0x92 ,

0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda,
            0x5e, 0x15, 0x46,

0x57, 0xa7, 0x8d, 0x9d, 0x84 , 0x90, 0xd8, 0xab,
            0x00, 0x8c, 0xbc,

0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3,
            0x45, 0x06 , 0xd0,

0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1,
            0xaf, 0xbd, 0x03,

0x01, 0x13, 0x8a, 0x6b , 0x3a, 0x91, 0x11, 0x41,
            0x4f, 0x67, 0xdc,

0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6,
            0x73 , 0x96, 0xac,

0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9,
            0x37, 0xe8, 0x1c,

0x75, 0xdf, 0x6e , 0x47, 0xf1, 0x1a, 0x71, 0x1d,
            0x29, 0xc5, 0x89,

0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b ,
            0xfc, 0x56, 0x3e,

0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0,
            0xfe, 0x78, 0xcd,

0x5a, 0xf4 , 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07,
            0xc7, 0x31, 0xb1,

0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f , 0x60,
            0x51, 0x7f, 0xa9,

0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f,
            0x93, 0xc9, 0x9c,

0xef , 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5,
            0xb0, 0xc8, 0xeb,

0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61 , 0x17, 0x2b,
            0x04, 0x7e, 0xba,

0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55,
            0x21, 0x0c, 0x7d]



  def getSBoxValue(self,num):
        """Retrieves a given S-Box Value"""


  return self.sbox[num]

    def getSBoxInvert(self,num):
        """Retrieves a

given Inverted S-Box Value"""
        return self.rsbox[num]

    def rotate

(self, word):
        """ Rijndael's key schedule rotate operation.



Rotate a word eight bits to the left: eg, rotate(1d2c3a4f) == 2c3a4f1d


Word is an char list of size 4 (32 bits overall).
        """
        return

word[1:] + word[:1]

    # Rijndael Rcon
    Rcon = [0x8d, 0x01, 0x02, 0x04,

0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36,
            0x6c, 0xd8, 0xab, 0x4d,

0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97,
            0x35, 0x6a, 0xd4, 0xb3,

0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72,
            0xe4, 0xd3, 0xbd, 0x61,

0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66,
            0xcc, 0x83, 0x1d, 0x3a,

0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04,
            0x08, 0x10, 0x20, 0x40,

0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d,
            0x9a, 0x2f, 0x5e, 0xbc,

0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3,
            0x7d, 0xfa, 0xef, 0xc5,

0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61,
            0xc2, 0x9f, 0x25, 0x4a,

0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a,
            0x74, 0xe8, 0xcb, 0x8d,

0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40,
            0x80, 0x1b, 0x36, 0x6c,

0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc,
            0x63, 0xc6, 0x97, 0x35,

0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5,
            0x91, 0x39, 0x72, 0xe4,

0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a,
            0x94, 0x33, 0x66, 0xcc,

0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d,
            0x01, 0x02, 0x04, 0x08,

0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c,
            0xd8, 0xab, 0x4d, 0x9a,

0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35,
            0x6a, 0xd4, 0xb3, 0x7d,

0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4,
            0xd3, 0xbd, 0x61, 0xc2,

0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc,
            0x83, 0x1d, 0x3a, 0x74,

0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08,
            0x10, 0x20, 0x40, 0x80,

0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a,
            0x2f, 0x5e, 0xbc, 0x63,

0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d,
            0xfa, 0xef, 0xc5, 0x91,

0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2,
            0x9f, 0x25, 0x4a, 0x94,

0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74,
            0xe8, 0xcb ]

    def

getRconValue(self, num):
        """Retrieves a given Rcon Value"""


return self.Rcon[num]

    def core(self, word, iteration):
        """Key

schedule core."""
        # rotate the 32-bit word 8 bits to the left


word = self.rotate(word)
        # apply S-Box substitution on all 4 parts of

the 32-bit word
        for i in range(4):
            word[i] =

self.getSBoxValue(word[i])
        # XOR the output of the rcon operation with

i to the first part
        # (leftmost) only
        word[0] = word[0] ^

self.getRconValue(iteration)
        return word

    def expandKey(self, key,

size, expandedKeySize):
        """Rijndael's key expansion.

        Expands an

128,192,256 key into an 176,208,240 bytes key

        expandedKey is a char

list of large enough size,
        key is the non-expanded key.
        """


   # current expanded keySize, in bytes
        currentSize = 0


rconIteration = 1
        expandedKey = [0] * expandedKeySize

        # set the

16, 24, 32 bytes of the expanded key to the input key
        for j in range

(size):
            expandedKey[j] = key[j]
        currentSize += size



while currentSize < expandedKeySize:
            # assign the previous 4 bytes

to the temporary value t
            t = expandedKey[currentSize-

4:currentSize]

            # every 16,24,32 bytes we apply the core schedule

to t
            # and increment rconIteration afterwards
            if

currentSize % size == 0:
                t = self.core(t, rconIteration)


         rconIteration += 1
            # For 256-bit keys, we add an extra

sbox to the calculation
            if size == self.keySize["SIZE_256"] and

((currentSize % size) == 16):
                for l in range(4): t[l] =

self.getSBoxValue(t[l])

            # We XOR t with the four-byte block

16,24,32 bytes before the new
            # expanded key.  This becomes the

next four bytes in the expanded
            # key.
            for m in range

(4):
                expandedKey[currentSize] = expandedKey[currentSize -

size] ^ \
                        t[m]
                currentSize += 1



return expandedKey

    def addRoundKey(self, state, roundKey):
        """Adds

(XORs) the round key to the state."""
        for i in range(16):


state[i] ^= roundKey[i]
        return state

    def createRoundKey(self,

expandedKey, roundKeyPointer):
        """Create a round key.
        Creates a

round key from the given expanded key and the
        position within the

expanded key.
        """
        roundKey = [0] * 16
        for i in range(4):


           for j in range(4):
                roundKey[j*4+i] = expandedKey

[roundKeyPointer + i*4 + j]
        return roundKey

    def

galois_multiplication(self, a, b):
        """Galois multiplication of 8 bit

characters a and b."""
        p = 0
        for counter in range(8):


 if b & 1: p ^= a
            hi_bit_set = a & 0x80
            a <<= 1


   # keep a 8 bit
            a &= 0xFF
            if hi_bit_set:


  a ^= 0x1b
            b >>= 1
        return p

    #
    # substitute all the

values from the state with the value in the SBox
    # using the state value

as index for the SBox
    #
    def subBytes(self, state, isInv):
        if

isInv: getter = self.getSBoxInvert
        else: getter = self.getSBoxValue


    for i in range(16): state[i] = getter(state[i])
        return state

    #

iterate over the 4 rows and call shiftRow() with that row
    def shiftRows

(self, state, isInv):
        for i in range(4):
            state =

self.shiftRow(state, i*4, i, isInv)
        return state

    # each iteration

shifts the row to the left by 1
    def shiftRow(self, state, statePointer,

nbr, isInv):
        for i in range(nbr):
            if isInv:


state[statePointer:statePointer+4] = \
                        state

[statePointer+3:statePointer+4] + \
                        state

[statePointer:statePointer+3]
            else:
                state

[statePointer:statePointer+4] = \
                        state[statePointer

+1:statePointer+4] + \
                        state

[statePointer:statePointer+1]
        return state

    # galois multiplication

of the 4x4 matrix
    def mixColumns(self, state, isInv):
        # iterate

over the 4 columns
        for i in range(4):
            # construct one

column by slicing over the 4 rows
            column = state[i:i+16:4]


   # apply the mixColumn on one column
            column = self.mixColumn

(column, isInv)
            # put the values back into the state


state[i:i+16:4] = column

        return state

    # galois multiplication of 1

column of the 4x4 matrix
    def mixColumn(self, column, isInv):
        if

isInv: mult = [14, 9, 13, 11]
        else: mult = [2, 1, 1, 3]
        cpy =

list(column)
        g = self.galois_multiplication

        column[0] = g(cpy

[0], mult[0]) ^ g(cpy[3], mult[1]) ^ \
                    g(cpy[2], mult[2])

^ g(cpy[1], mult[3])
        column[1] = g(cpy[1], mult[0]) ^ g(cpy[0], mult

[1]) ^ \
                    g(cpy[3], mult[2]) ^ g(cpy[2], mult[3])


column[2] = g(cpy[2], mult[0]) ^ g(cpy[1], mult[1]) ^ \
                    g

(cpy[0], mult[2]) ^ g(cpy[3], mult[3])
        column[3] = g(cpy[3], mult[0])

^ g(cpy[2], mult[1]) ^ \
                    g(cpy[1], mult[2]) ^ g(cpy[0],

mult[3])
        return column

    # applies the 4 operations of the forward

round in sequence
    def aes_round(self, state, roundKey):
        state =

self.subBytes(state, False)
        state = self.shiftRows(state, False)


 state = self.mixColumns(state, False)
        state = self.addRoundKey(state,

roundKey)
        return state

    # applies the 4 operations of the inverse

round in sequence
    def aes_invRound(self, state, roundKey):
        state =

self.shiftRows(state, True)
        state = self.subBytes(state, True)


state = self.addRoundKey(state, roundKey)
        state = self.mixColumns

(state, True)
        return state

    # Perform the initial operations, the

standard round, and the final
    # operations of the forward aes, creating a

round key for each round
    def aes_main(self, state, expandedKey,

nbrRounds):
        state = self.addRoundKey(state, self.createRoundKey

(expandedKey, 0))
        i = 1
        while i < nbrRounds:
            state =

self.aes_round(state,
                                   self.createRoundKey

(expandedKey, 16*i))
            i += 1
        state = self.subBytes(state,

False)
        state = self.shiftRows(state, False)
        state =

self.addRoundKey(state,
                                 self.createRoundKey

(expandedKey, 16*nbrRounds))
        return state

    # Perform the initial

operations, the standard round, and the final
    # operations of the inverse

aes, creating a round key for each round
    def aes_invMain(self, state,

expandedKey, nbrRounds):
        state = self.addRoundKey(state,


                  self.createRoundKey(expandedKey, 16*nbrRounds))
        i =

nbrRounds - 1
        while i > 0:
            state = self.aes_invRound(state,


                                     self.createRoundKey(expandedKey, 16*i))


          i -= 1
        state = self.shiftRows(state, True)
        state =

self.subBytes(state, True)
        state = self.addRoundKey(state,

self.createRoundKey(expandedKey, 0))
        return state

    # encrypts a 128

bit input block against the given key of size specified
    def encrypt(self,

iput, key, size):
        output = [0] * 16
        # the number of rounds


  nbrRounds = 0
        # the 128 bit block to encode
        block = [0] * 16


      # set the number of rounds
        if size == self.keySize["SIZE_128"]:

nbrRounds = 10
        elif size == self.keySize["SIZE_192"]: nbrRounds = 12


     elif size == self.keySize["SIZE_256"]: nbrRounds = 14
        else:

return None

        # the expanded keySize
        expandedKeySize = 16*

(nbrRounds+1)

        # Set the block values, for the block:
        # a0,0

a0,1 a0,2 a0,3
        # a1,0 a1,1 a1,2 a1,3
        # a2,0 a2,1 a2,2 a2,3


  # a3,0 a3,1 a3,2 a3,3
        # the mapping order is a0,0 a1,0 a2,0 a3,0

a0,1 a1,1 ... a2,3 a3,3
        #
        # iterate over the columns
        for

i in range(4):
            # iterate over the rows
            for j in range

(4):
                block[(i+(j*4))] = iput[(i*4)+j]

        # expand the key

into an 176, 208, 240 bytes key
        # the expanded key
        expandedKey

= self.expandKey(key, size, expandedKeySize)

        # encrypt the block using

the expandedKey
        block = self.aes_main(block, expandedKey, nbrRounds)



     # unmap the block again into the output
        for k in range(4):


    # iterate over the rows
            for l in range(4):


output[(k*4)+l] = block[(k+(l*4))]
        return output

    # decrypts a 128

bit input block against the given key of size specified
    def decrypt(self,

iput, key, size):
        output = [0] * 16
        # the number of rounds


  nbrRounds = 0
        # the 128 bit block to decode
        block = [0] * 16


      # set the number of rounds
        if size == self.keySize["SIZE_128"]:

nbrRounds = 10
        elif size == self.keySize["SIZE_192"]: nbrRounds = 12


     elif size == self.keySize["SIZE_256"]: nbrRounds = 14
        else:

return None

        # the expanded keySize
        expandedKeySize = 16*

(nbrRounds+1)

        # Set the block values, for the block:
        # a0,0

a0,1 a0,2 a0,3
        # a1,0 a1,1 a1,2 a1,3
        # a2,0 a2,1 a2,2 a2,3


  # a3,0 a3,1 a3,2 a3,3
        # the mapping order is a0,0 a1,0 a2,0 a3,0

a0,1 a1,1 ... a2,3 a3,3

        # iterate over the columns
        for i in

range(4):
            # iterate over the rows
            for j in range(4):


            block[(i+(j*4))] = iput[(i*4)+j]
        # expand the key into an

176, 208, 240 bytes key
        expandedKey = self.expandKey(key, size,

expandedKeySize)
        # decrypt the block using the expandedKey


block = self.aes_invMain(block, expandedKey, nbrRounds)
        # unmap the

block again into the output
        for k in range(4):
            # iterate

over the rows
            for l in range(4):
                output[(k*4)+l] =

block[(k+(l*4))]
        return output

class AESModeOfOperation(object):

    aes

= AES()

    # structure of supported modes of operation
    modeOfOperation =

dict(OFB=0, CFB=1, CBC=2)

    # converts a 16 character string into a number

array
    def convertString(self, string, start, end, mode):
        if end -

start > 16: end = start + 16
        if mode == self.modeOfOperation["CBC"]:

ar = [0] * 16
        else: ar = []

        i = start
        j = 0
        while

len(ar) < end - start:
            ar.append(0)
        while i < end:


  ar[j] = ord(string[i])
            j += 1
            i += 1
        return ar



   # Mode of Operation Encryption
    # stringIn - Input String
    # mode -

mode of type modeOfOperation
    # hexKey - a hex key of the bit length size


 # size - the bit length of the key
    # hexIV - the 128 bit hex

Initilization Vector
    def encrypt(self, stringIn, mode, key, size, IV):


   if len(key) % size:
            return None
        if len(IV) % 16:


   return None
        # the AES input/output
        plaintext = []


iput = [0] * 16
        output = []
        ciphertext = [0] * 16
        # the

output cipher string
        cipherOut = []
        # char firstRound


firstRound = True
        if stringIn != None:
            for j in range(int

(math.ceil(float(len(stringIn))/16))):
                start = j*16


    end = j*16+16
                if  end > len(stringIn):


end = len(stringIn)
                plaintext = self.convertString(stringIn,

start, end, mode)
                # print 'PT@%s:%s' % (j, plaintext)


      if mode == self.modeOfOperation["CFB"]:
                    if

firstRound:
                        output = self.aes.encrypt(IV, key, size)


                     firstRound = False
                    else:


          output = self.aes.encrypt(iput, key, size)
                    for i

in range(16):
                        if len(plaintext)-1 < i:


           ciphertext[i] = 0 ^ output[i]
                        elif len

(output)-1 < i:
                            ciphertext[i] = plaintext[i] ^ 0


                     elif len(plaintext)-1 < i and len(output) < i:


                 ciphertext[i] = 0 ^ 0
                        else:


                 ciphertext[i] = plaintext[i] ^ output[i]


for k in range(end-start):
                        cipherOut.append

(ciphertext[k])
                    iput = ciphertext
                elif mode

== self.modeOfOperation["OFB"]:
                    if firstRound:


           output = self.aes.encrypt(IV, key, size)


firstRound = False
                    else:
                        output =

self.aes.encrypt(iput, key, size)
                    for i in range(16):


                  if len(plaintext)-1 < i:


ciphertext[i] = 0 ^ output[i]
                        elif len(output)-1 < i:


                          ciphertext[i] = plaintext[i] ^ 0


    elif len(plaintext)-1 < i and len(output) < i:


ciphertext[i] = 0 ^ 0
                        else:


ciphertext[i] = plaintext[i] ^ output[i]
                    for k in range

(end-start):
                        cipherOut.append(ciphertext[k])


         iput = output
                elif mode == self.modeOfOperation

["CBC"]:
                    for i in range(16):
                        if

firstRound:
                            iput[i] =  plaintext[i] ^ IV[i]


                else:
                            iput[i] =  plaintext[i] ^

ciphertext[i]
                    # print 'IP@%s:%s' % (j, iput)


     firstRound = False
                    ciphertext = self.aes.encrypt

(iput, key, size)
                    # always 16 bytes because of the padding

for CBC
                    for k in range(16):


cipherOut.append(ciphertext[k])
        return mode, len(stringIn), cipherOut



  # Mode of Operation Decryption
    # cipherIn - Encrypted String
    #

originalsize - The unencrypted string length - required for CBC
    # mode -

mode of type modeOfOperation
    # key - a number array of the bit length size


   # size - the bit length of the key
    # IV - the 128 bit number array

Initilization Vector
    def decrypt(self, cipherIn, originalsize, mode, key,

size, IV):
        # cipherIn = unescCtrlChars(cipherIn)
        if len(key) %

size:
            return None
        if len(IV) % 16:
            return None


     # the AES input/output
        ciphertext = []
        iput = []


output = []
        plaintext = [0] * 16
        # the output plain text string


       stringOut = ''
        # char firstRound
        firstRound = True


 if cipherIn != None:
            for j in range(int(math.ceil(float(len

(cipherIn))/16))):
                start = j*16
                end = j*16+16


             if j*16+16 > len(cipherIn):
                    end = len

(cipherIn)
                ciphertext = cipherIn[start:end]
                if

mode == self.modeOfOperation["CFB"]:
                    if firstRound:


                output = self.aes.encrypt(IV, key, size)


  firstRound = False
                    else:
                        output =

self.aes.encrypt(iput, key, size)
                    for i in range(16):


                  if len(output)-1 < i:
                            plaintext

[i] = 0 ^ ciphertext[i]
                        elif len(ciphertext)-1 < i:


                        plaintext[i] = output[i] ^ 0


elif len(output)-1 < i and len(ciphertext) < i:


plaintext[i] = 0 ^ 0
                        else:


plaintext[i] = output[i] ^ ciphertext[i]
                    for k in range

(end-start):
                        stringOut += chr(plaintext[k])


        iput = ciphertext
                elif mode == self.modeOfOperation

["OFB"]:
                    if firstRound:
                        output =

self.aes.encrypt(IV, key, size)
                        firstRound = False


               else:
                        output = self.aes.encrypt(iput,

key, size)
                    for i in range(16):
                        if

len(output)-1 < i:
                            plaintext[i] = 0 ^ ciphertext

[i]
                        elif len(ciphertext)-1 < i:


    plaintext[i] = output[i] ^ 0
                        elif len(output)-1 <

i and len(ciphertext) < i:
                            plaintext[i] = 0 ^ 0


                    else:
                            plaintext[i] = output[i]

^ ciphertext[i]
                    for k in range(end-start):


       stringOut += chr(plaintext[k])
                    iput = output


        elif mode == self.modeOfOperation["CBC"]:
                    output =

self.aes.decrypt(ciphertext, key, size)
                    for i in range

(16):
                        if firstRound:


plaintext[i] = IV[i] ^ output[i]
                        else:


           plaintext[i] = iput[i] ^ output[i]
                    firstRound =

False
                    if originalsize is not None and originalsize < end:


                      for k in range(originalsize-start):


       stringOut += chr(plaintext[k])
                    else:


        for k in range(end-start):
                            stringOut +=

chr(plaintext[k])
                    iput = ciphertext
        return

stringOut

# end of aes.py code

# pywallet crypter implementation

crypter = None

try:
    from Crypto.Cipher import AES
    crypter = 'pycrypto'
except:
    pass

class Crypter_pycrypto( object ):
    def SetKeyFromPassphrase(self, vKeyData,

vSalt, nDerivIterations, nDerivationMethod):
        if nDerivationMethod !=

0:
            return 0
        data = vKeyData + vSalt
        for i in xrange

(nDerivIterations):
            data = hashlib.sha512(data).digest()


self.SetKey(data[0:32])
        self.SetIV(data[32:32+16])
        return len

(data)

    def SetKey(self, key):
        self.chKey = key

    def SetIV(self,

iv):
        self.chIV = iv[0:16]

    def Encrypt(self, data):
        return

AES.new(self.chKey,AES.MODE_CBC,self.chIV).encrypt(data)[0:32]

    def

Decrypt(self, data):
        return AES.new

(self.chKey,AES.MODE_CBC,self.chIV).decrypt(data)[0:32]

try:
    if not

crypter:
        import ctypes
        import ctypes.util
        ssl =

ctypes.cdll.LoadLibrary (ctypes.util.find_library ('ssl') or 'libeay32')


  crypter = 'ssl'
except:
    pass

class Crypter_ssl(object):
    def __init__

(self):
        self.chKey = ctypes.create_string_buffer (32)
        self.chIV

= ctypes.create_string_buffer (16)

    def SetKeyFromPassphrase(self,

vKeyData, vSalt, nDerivIterations, nDerivationMethod):
        if

nDerivationMethod != 0:
            return 0
        strKeyData =

ctypes.create_string_buffer (vKeyData)
        chSalt =

ctypes.create_string_buffer (vSalt)
        return ssl.EVP_BytesToKey

(ssl.EVP_aes_256_cbc(), ssl.EVP_sha512(), chSalt, strKeyData,
            len

(vKeyData), nDerivIterations, ctypes.byref(self.chKey), ctypes.byref

(self.chIV))

    def SetKey(self, key):
        self.chKey =

ctypes.create_string_buffer(key)

    def SetIV(self, iv):
        self.chIV =

ctypes.create_string_buffer(iv)

    def Encrypt(self, data):
        buf =

ctypes.create_string_buffer(len(data) + 16)
        written = ctypes.c_int(0)


      final = ctypes.c_int(0)
        ctx = ssl.EVP_CIPHER_CTX_new()


ssl.EVP_CIPHER_CTX_init(ctx)
        ssl.EVP_EncryptInit_ex(ctx,

ssl.EVP_aes_256_cbc(), None, self.chKey, self.chIV)


ssl.EVP_EncryptUpdate(ctx, buf, ctypes.byref(written), data, len(data))


 output = buf.raw[:written.value]
        ssl.EVP_EncryptFinal_ex(ctx, buf,

ctypes.byref(final))
        output += buf.raw[:final.value]
        return

output

    def Decrypt(self, data):
        buf = ctypes.create_string_buffer

(len(data) + 16)
        written = ctypes.c_int(0)
        final =

ctypes.c_int(0)
        ctx = ssl.EVP_CIPHER_CTX_new()


ssl.EVP_CIPHER_CTX_init(ctx)
        ssl.EVP_DecryptInit_ex(ctx,

ssl.EVP_aes_256_cbc(), None, self.chKey, self.chIV)


ssl.EVP_DecryptUpdate(ctx, buf, ctypes.byref(written), data, len(data))


 output = buf.raw[:written.value]
        ssl.EVP_DecryptFinal_ex(ctx, buf,

ctypes.byref(final))
        output += buf.raw[:final.value]
        return

output

class Crypter_pure(object):
    def __init__(self):
        self.m =

AESModeOfOperation()
        self.cbc = self.m.modeOfOperation["CBC"]


self.sz = self.m.aes.keySize["SIZE_256"]

    def SetKeyFromPassphrase(self,

vKeyData, vSalt, nDerivIterations, nDerivationMethod):
        if

nDerivationMethod != 0:
            return 0
        data = vKeyData + vSalt


    for i in xrange(nDerivIterations):
            data = hashlib.sha512

(data).digest()
        self.SetKey(data[0:32])
        self.SetIV(data

[32:32+16])
        return len(data)

    def SetKey(self, key):


self.chKey = [ord(i) for i in key]

    def SetIV(self, iv):
        self.chIV =

[ord(i) for i in iv]

    def Encrypt(self, data):
        mode, size, cypher =

self.m.encrypt(data, self.cbc, self.chKey, self.sz, self.chIV)
        return

''.join(map(chr, cypher))

    def Decrypt(self, data):
        chData = [ord

(i) for i in data]
        return self.m.decrypt(chData, self.sz, self.cbc,

self.chKey, self.sz, self.chIV)

# secp256k1

_p =

0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2FL
_r =

0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141L
_b =

0x0000000000000000000000000000000000000000000000000000000000000007L
_a =

0x0000000000000000000000000000000000000000000000000000000000000000L
_Gx =

0x79BE667EF9DCBBAC55A06295CE870B07029BFCDB2DCE28D959F2815B16F81798L
_Gy =

0x483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8L

# python-

ecdsa code (EC_KEY implementation)

class CurveFp( object ):
    def __init__(

self, p, a, b ):
        self.__p = p
        self.__a = a
        self.__b = b



  def p( self ):
        return self.__p

    def a( self ):
        return

self.__a

    def b( self ):
        return self.__b

    def contains_point(

self, x, y ):
        return ( y * y - ( x * x * x + self.__a * x + self.__b )

) % self.__p == 0

class Point( object ):
    def __init__( self, curve, x, y,

order = None ):
        self.__curve = curve
        self.__x = x


self.__y = y
        self.__order = order
        if self.__curve: assert

self.__curve.contains_point( x, y )
        if order: assert self * order ==

INFINITY

    def __add__( self, other ):
        if other == INFINITY: return

self
        if self == INFINITY: return other
        assert self.__curve ==

other.__curve
        if self.__x == other.__x:
            if ( self.__y +

other.__y ) % self.__curve.p() == 0:
                return INFINITY


 else:
                return self.double()

        p = self.__curve.p()


l = ( ( other.__y - self.__y ) * \
                    inverse_mod( other.__x

- self.__x, p ) ) % p
        x3 = ( l * l - self.__x - other.__x ) % p


y3 = ( l * ( self.__x - x3 ) - self.__y ) % p
        return Point(

self.__curve, x3, y3 )

    def __mul__( self, other ):
        def

leftmost_bit( x ):
            assert x > 0
            result = 1L


while result <= x: result = 2 * result
            return result / 2

        e

= other
        if self.__order: e = e % self.__order
        if e == 0: return

INFINITY
        if self == INFINITY: return INFINITY
        assert e > 0


  e3 = 3 * e
        negative_self = Point( self.__curve, self.__x, -self.__y,

self.__order )
        i = leftmost_bit( e3 ) / 2
        result = self


while i > 1:
            result = result.double()
            if ( e3 & i ) !=

0 and ( e & i ) == 0: result = result + self
            if ( e3 & i ) == 0

and ( e & i ) != 0: result = result + negative_self
            i = i / 2


  return result

    def __rmul__( self, other ):
        return self * other



def __str__( self ):
        if self == INFINITY: return "infinity"


return "(%d,%d)" % ( self.__x, self.__y )

    def double( self ):
        if

self == INFINITY:
            return INFINITY

        p = self.__curve.p()


  a = self.__curve.a()
        l = ( ( 3 * self.__x * self.__x + a ) * \


             inverse_mod( 2 * self.__y, p ) ) % p
        x3 = ( l * l - 2 *

self.__x ) % p
        y3 = ( l * ( self.__x - x3 ) - self.__y ) % p


return Point( self.__curve, x3, y3 )

    def x( self ):
        return self.__x



   def y( self ):
        return self.__y

    def curve( self ):
        return

self.__curve

    def order( self ):
        return self.__order

INFINITY = Point( None, None, None )

def inverse_mod( a, m ):
    if a < 0 or m

<= a: a = a % m
    c, d = a, m
    uc, vc, ud, vd = 1, 0, 0, 1
    while c !=

0:
        q, c, d = divmod( d, c ) + ( c, )
        uc, vc, ud, vd = ud -

q*uc, vd - q*vc, uc, vc
    assert d == 1
    if ud > 0: return ud
    else:

return ud + m

class Signature( object ):
    def __init__( self, r, s ):


self.r = r
        self.s = s

class Public_key( object ):
    def

__init__( self, generator, point ):
        self.curve = generator.curve()


   self.generator = generator
        self.point = point
        n =

generator.order()
        if not n:
            raise RuntimeError, "Generator

point must have order."
        if not n * point == INFINITY:
            raise

RuntimeError, "Generator point order is bad."
        if point.x() < 0 or n <=

point.x() or point.y() < 0 or n <= point.y():
            raise RuntimeError,

"Generator point has x or y out of range."

    def verifies( self, hash,

signature ):
        G = self.generator
        n = G.order()
        r =

signature.r
        s = signature.s
        if r < 1 or r > n-1: return False


     if s < 1 or s > n-1: return False
        c = inverse_mod( s, n )


u1 = ( hash * c ) % n
        u2 = ( r * c ) % n
        xy = u1 * G + u2 *

self.point
        v = xy.x() % n
        return v == r

class Private_key(

object ):
    def __init__( self, public_key, secret_multiplier ):


self.public_key = public_key
        self.secret_multiplier =

secret_multiplier

    def der( self ):
        hex_der_key =

'06052b8104000a30740201010420' + \
            '%064x' %

self.secret_multiplier + \
            'a00706052b8104000aa14403420004' + \


        '%064x' % self.public_key.point.x() + \
            '%064x' %

self.public_key.point.y()
        return hex_der_key.decode('hex')

    def

sign( self, hash, random_k ):
        G = self.public_key.generator
        n =

G.order()
        k = random_k % n
        p1 = k * G
        r = p1.x()


if r == 0: raise RuntimeError, "amazingly unlucky random number r"
        s =

( inverse_mod( k, n ) * \
                    ( hash + (

self.secret_multiplier * r ) % n ) ) % n
        if s == 0: raise

RuntimeError, "amazingly unlucky random number s"
        return Signature( r,

s )

class EC_KEY(object):
    def __init__( self, secret ):
        curve =

CurveFp( _p, _a, _b )
        generator = Point( curve, _Gx, _Gy, _r )


self.pubkey = Public_key( generator, generator * secret )
        self.privkey

= Private_key( self.pubkey, secret )
        self.secret = secret

# end of

python-ecdsa code

# pywallet openssl private key implementation

def

i2d_ECPrivateKey(pkey, compressed=False):
    if compressed:
        key =

'3081d30201010420' + \
            '%064x' % pkey.secret + \


'a081a53081a2020101302c06072a8648ce3d0101022100' + \
            '%064x' % _p

+ \
            '3006040100040107042102' + \
            '%064x' % _Gx + \


      '022100' + \
            '%064x' % _r + \
            '020101a124032200'


  else:
        key = '308201130201010420' + \
            '%064x' %

pkey.secret + \
            'a081a53081a2020101302c06072a8648ce3d0101022100' +

\
            '%064x' % _p + \
            '3006040100040107044104' + \


   '%064x' % _Gx + \
            '%064x' % _Gy + \
            '022100' + \


       '%064x' % _r + \
            '020101a144034200'

    return key.decode

('hex') + i2o_ECPublicKey(pkey, compressed)

def i2o_ECPublicKey(pkey,

compressed=False):
    # public keys are 65 bytes long (520 bits)
    # 0x04 +

32-byte X-coordinate + 32-byte Y-coordinate
    # 0x00 = point at infinity,

0x02 and 0x03 = compressed, 0x04 = uncompressed
    # compressed keys: <sign>

<x> where <sign> is 0x02 if y is even and 0x03 if y is odd
    if compressed:


      if pkey.pubkey.point.y() & 1:
            key = '03' + '%064x' %

pkey.pubkey.point.x()
        else:
            key = '02' + '%064x' %

pkey.pubkey.point.x()
    else:
        key = '04' + \
            '%064x' %

pkey.pubkey.point.x() + \
            '%064x' % pkey.pubkey.point.y()



return key.decode('hex')

# bitcointools hashes and base58 implementation

def

hash_160(public_key):
    md = hashlib.new('ripemd160')
    md.update

(hashlib.sha256(public_key).digest())
    return md.digest()

def

public_key_to_bc_address(public_key):
    h160 = hash_160(public_key)


return hash_160_to_bc_address(h160)

def hash_160_to_bc_address(h160):
    vh160

= chr(addrtype) + h160
    h = Hash(vh160)
    addr = vh160 + h[0:4]
    return

b58encode(addr)

def bc_address_to_hash_160(addr):
    bytes = b58decode(addr,

25)
    return bytes[1:21]

__b58chars =

'123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'
__b58base = len

(__b58chars)

def b58encode(v):
    """ encode v, which is a string of bytes, to

base58.
    """

    long_value = 0L
    for (i, c) in enumerate(v[::-

1]):
        long_value += (256**i) * ord(c)

    result = ''
    while

long_value >= __b58base:
        div, mod = divmod(long_value, __b58base)


  result = __b58chars[mod] + result
        long_value = div
    result =

__b58chars[long_value] + result

    # Bitcoin does a little leading-zero-

compression:
    # leading 0-bytes in the input become leading-1s
    nPad = 0


  for c in v:
        if c == '\0': nPad += 1
        else: break

    return

(__b58chars[0]*nPad) + result

def b58decode(v, length):
    """ decode v into a

string of len bytes
    """
    long_value = 0L
    for (i, c) in enumerate(v

[::-1]):
        long_value += __b58chars.find(c) * (__b58base**i)

    result =

''
    while long_value >= 256:
        div, mod = divmod(long_value, 256)


  result = chr(mod) + result
        long_value = div
    result = chr

(long_value) + result

    nPad = 0
    for c in v:
        if c == __b58chars

[0]: nPad += 1
        else: break

    result = chr(0)*nPad + result
    if

length is not None and len(result) != length:
        return None

    return

result

# end of bitcointools base58 implementation


# address handling code

def

Hash(data):
    return hashlib.sha256(hashlib.sha256(data).digest()).digest()

def EncodeBase58Check(secret):
    hash = Hash(secret)
    return b58encode

(secret + hash[0:4])

def DecodeBase58Check(sec):
    vchRet = b58decode(sec,

None)
    secret = vchRet[0:-4]
    csum = vchRet[-4:]
    hash = Hash(secret)


 cs32 = hash[0:4]
    if cs32 != csum:
        return None
    else:


return secret

def PrivKeyToSecret(privkey):
    if len(privkey) == 279:


return privkey[9:9+32]
    else:
        return privkey[8:8+32]

def

SecretToASecret(secret, compressed=False):
    vchIn = chr((addrtype+128)&255)

+ secret
    if compressed: vchIn += '\01'
    return EncodeBase58Check(vchIn)

def ASecretToSecret(sec):
    vch = DecodeBase58Check(sec)
    if vch and vch

[0] == chr((addrtype+128)&255):
        return vch[1:]
    else:
        return

False

def regenerate_key(sec):
    b = ASecretToSecret(sec)
    if not b:


return False
    b = b[0:32]
    secret = int('0x' + b.encode('hex'), 16)


return EC_KEY(secret)

def GetPubKey(pkey, compressed=False):
    return

i2o_ECPublicKey(pkey, compressed)

def GetPrivKey(pkey, compressed=False):


return i2d_ECPrivateKey(pkey, compressed)

def GetSecret(pkey):
    return

('%064x' % pkey.secret).decode('hex')

def is_compressed(sec):
    b =

ASecretToSecret(sec)
    return len(b) == 33

# bitcointools wallet.dat handling

code

def create_env(db_dir):
    db_env = DBEnv(0)
    r = db_env.open(db_dir,

(DB_CREATE|DB_INIT_LOCK|DB_INIT_LOG|DB_INIT_MPOOL|DB_INIT_TXN|DB_THREAD|

DB_RECOVER))
    return db_env

def parse_CAddress(vds):
    d =

{'ip':'0.0.0.0','port':0,'nTime': 0}
    try:
        d['nVersion'] =

vds.read_int32()
        d['nTime'] = vds.read_uint32()
        d['nServices']

= vds.read_uint64()
        d['pchReserved'] = vds.read_bytes(12)
        d

['ip'] = socket.inet_ntoa(vds.read_bytes(4))
        d['port'] =

vds.read_uint16()
    except:
        pass
    return d

def deserialize_CAddress

(d):
    return d['ip']+":"+str(d['port'])

def parse_BlockLocator(vds):
    d =

{ 'hashes' : [] }
    nHashes = vds.read_compact_size()
    for i in xrange

(nHashes):
        d['hashes'].append(vds.read_bytes(32))
        return d

def

deserialize_BlockLocator(d):
  result = "Block Locator top: "+d['hashes'][0]

[::-1].encode('hex_codec')
  return result

def parse_setting(setting, vds):


if setting[0] == "f":    # flag (boolean) settings
        return str

(vds.read_boolean())
    elif setting[0:4] == "addr": # CAddress
        d =

parse_CAddress(vds)
        return deserialize_CAddress(d)
    elif setting ==

"nTransactionFee":
        return vds.read_int64()
    elif setting ==

"nLimitProcessors":
        return vds.read_int32()
    return 'unknown

setting'

class SerializationError(Exception):
    """ Thrown when there's a

problem deserializing or serializing """

class BCDataStream(object):
    def

__init__(self):
        self.input = None
        self.read_cursor = 0

    def

clear(self):
        self.input = None
        self.read_cursor = 0

    def

write(self, bytes):    # Initialize with string of bytes
        if self.input

is None:
            self.input = bytes
        else:
            self.input +=

bytes

    def map_file(self, file, start):    # Initialize with bytes from

file
        self.input = mmap.mmap(file.fileno(), 0, access=mmap.ACCESS_READ)


       self.read_cursor = start
    def seek_file(self, position):


self.read_cursor = position
    def close_file(self):
        self.input.close

()

    def read_string(self):
        # Strings are encoded depending on

length:
        # 0 to 252 :    1-byte-length followed by bytes (if any)


 # 253 to 65,535 : byte'253' 2-byte-length followed by bytes
        # 65,536

to 4,294,967,295 : byte '254' 4-byte-length followed by bytes
        # ...

and the Bitcoin client is coded to understand:
        # greater than

4,294,967,295 : byte '255' 8-byte-length followed by bytes of string
        #

... but I don't think it actually handles any strings that big.
        if

self.input is None:
            raise SerializationError("call write(bytes)

before trying to deserialize")

        try:
            length =

self.read_compact_size()
        except IndexError:
            raise

SerializationError("attempt to read past end of buffer")

        return

self.read_bytes(length)

    def write_string(self, string):
        # Length-

encoded as with read-string
        self.write_compact_size(len(string))


 self.write(string)

    def read_bytes(self, length):
        try:


result = self.input[self.read_cursor:self.read_cursor+length]


self.read_cursor += length
            return result
        except IndexError:


           raise SerializationError("attempt to read past end of buffer")



   return ''

    def read_boolean(self): return self.read_bytes(1)[0] != chr

(0)
    def read_int16(self): return self._read_num('<h')
    def read_uint16

(self): return self._read_num('<H')
    def read_int32(self): return

self._read_num('<i')
    def read_uint32(self): return self._read_num('<I')


def read_int64(self): return self._read_num('<q')
    def read_uint64(self):

return self._read_num('<Q')

    def write_boolean(self, val): return

self.write(chr(1) if val else chr(0))
    def write_int16(self, val): return

self._write_num('<h', val)
    def write_uint16(self, val): return

self._write_num('<H', val)
    def write_int32(self, val): return

self._write_num('<i', val)
    def write_uint32(self, val): return

self._write_num('<I', val)
    def write_int64(self, val): return

self._write_num('<q', val)
    def write_uint64(self, val): return

self._write_num('<Q', val)

    def read_compact_size(self):
        size = ord

(self.input[self.read_cursor])
        self.read_cursor += 1
        if size ==

253:
            size = self._read_num('<H')
        elif size == 254:


  size = self._read_num('<I')
        elif size == 255:
            size =

self._read_num('<Q')
        return size

    def write_compact_size(self,

size):
        if size < 0:
            raise SerializationError("attempt to

write size < 0")
        elif size < 253:
             self.write(chr(size))


    elif size < 2**16:
            self.write('\xfd')


self._write_num('<H', size)
        elif size < 2**32:
            self.write

('\xfe')
            self._write_num('<I', size)
        elif size < 2**64:


       self.write('\xff')
            self._write_num('<Q', size)

    def

_read_num(self, format):
        (i,) = struct.unpack_from(format, self.input,

self.read_cursor)
        self.read_cursor += struct.calcsize(format)


return i

    def _write_num(self, format, num):
        s = struct.pack(format,

num)
        self.write(s)

def open_wallet(db_env, writable=False):
    db = DB

(db_env)
    flags = DB_THREAD | (DB_CREATE if writable else DB_RDONLY)


try:
        r = db.open("wallet.dat", "main", DB_BTREE, flags)
    except

DBError:
        r = True

    if r is not None:
        logging.error("Couldn't

open wallet.dat/main. Try quitting Bitcoin and running this again.")


sys.exit(1)

    return db

def parse_wallet(db, item_callback):
    kds =

BCDataStream()
    vds = BCDataStream()

    for (key, value) in db.items():


   d = { }

        kds.clear(); kds.write(key)
        vds.clear(); vds.write

(value)

        type = kds.read_string()

        d["__key__"] = key
        d

["__value__"] = value
        d["__type__"] = type

        try:
            if

type == "tx":
                d["tx_id"] = kds.read_bytes(32)
            elif

type == "name":
                d['hash'] = kds.read_string()


d['name'] = vds.read_string()
            elif type == "version":


  d['version'] = vds.read_uint32()
            elif type == "minversion":


          d['minversion'] = vds.read_uint32()
            elif type ==

"setting":
                d['setting'] = kds.read_string()
                d

['value'] = parse_setting(d['setting'], vds)
            elif type == "key":


             d['public_key'] = kds.read_bytes(kds.read_compact_size())


        d['private_key'] = vds.read_bytes(vds.read_compact_size())


elif type == "wkey":
                d['public_key'] = kds.read_bytes

(kds.read_compact_size())
                d['private_key'] = vds.read_bytes

(vds.read_compact_size())
                d['created'] = vds.read_int64()


          d['expires'] = vds.read_int64()
                d['comment'] =

vds.read_string()
            elif type == "ckey":
                d

['public_key'] = kds.read_bytes(kds.read_compact_size())
                d

['crypted_key'] = vds.read_bytes(vds.read_compact_size())
            elif

type == "mkey":
                d['nID'] = kds.read_int32()
                d

['crypted_key'] = vds.read_bytes(vds.read_compact_size())
                d

['salt'] = vds.read_bytes(vds.read_compact_size())
                d

['nDerivationMethod'] = vds.read_int32()
                d

['nDeriveIterations'] = vds.read_int32()
                d

['vchOtherDerivationParameters'] = vds.read_bytes(vds.read_compact_size())


        elif type == "defaultkey":
                d['key'] = vds.read_bytes

(vds.read_compact_size())
            elif type == "pool":
                d

['n'] = kds.read_int64()
                d['nVersion'] = vds.read_int32()


          d['nTime'] = vds.read_int64()
                d['public_key'] =

vds.read_bytes(vds.read_compact_size())
            elif type == "acc":


        d['account'] = kds.read_string()
                d['nVersion'] =

vds.read_int32()
                d['public_key'] = vds.read_bytes

(vds.read_compact_size())
            elif type == "acentry":


d['account'] = kds.read_string()
                d['n'] = kds.read_uint64()


            d['nVersion'] = vds.read_int32()
                d['nCreditDebit']

= vds.read_int64()
                d['nTime'] = vds.read_int64()


 d['otherAccount'] = vds.read_string()
                d['comment'] =

vds.read_string()
            elif type == "bestblock":
                d

['nVersion'] = vds.read_int32()
                d.update(parse_BlockLocator

(vds))

            item_callback(type, d)

        except Exception,

e:
            traceback.print_exc()
            print("ERROR parsing

wallet.dat, type %s" % type)
            print("key data in hex:

%s"%key.encode('hex_codec'))
            print("value data in hex:

%s"%value.encode('hex_codec'))
            sys.exit(1)

def update_wallet

(db, type, data):
    """Write a single item to the wallet.
    db must be open

with writable=True.
    type and data are the type code and data dictionary as

parse_wallet would
    give to item_callback.
    data's __key__, __value__ and

__type__ are ignored; only the primary data
    fields are used.
    """
    d =

data
    kds = BCDataStream()
    vds = BCDataStream()

    # Write the type code

to the key
    kds.write_string(type)
    vds.write("")

# Ensure there is something

    try:
        if type == "tx":
            raise

NotImplementedError("Writing items of type 'tx'")
            kds.write(d

['tx_id'])
        elif type == "name":
            kds.write_string(d['hash'])


           vds.write_string(d['name'])
        elif type == "version":


   vds.write_uint32(d['version'])
        elif type == "minversion":


 vds.write_uint32(d['minversion'])
        elif type == "setting":


raise NotImplementedError("Writing items of type 'setting'")


kds.write_string(d['setting'])
            #d['value'] = parse_setting(d

['setting'], vds)
        elif type == "key":
            kds.write_string(d

['public_key'])
            vds.write_string(d['private_key'])
        elif

type == "wkey":
            kds.write_string(d['public_key'])


vds.write_string(d['private_key'])
            vds.write_int64(d['created'])


         vds.write_int64(d['expires'])
            vds.write_string(d

['comment'])
        elif type == "ckey":
            kds.write_string(d

['public_key'])
            vds.write_string(d['crypted_key'])
        elif

type == "defaultkey":
            vds.write_string(d['key'])
        elif type

== "pool":
            kds.write_int64(d['n'])
            vds.write_int32(d

['nVersion'])
            vds.write_int64(d['nTime'])


vds.write_string(d['public_key'])
        elif type == "acc":


kds.write_string(d['account'])
            vds.write_int32(d['nVersion'])


      vds.write_string(d['public_key'])
        elif type == "acentry":


    kds.write_string(d['account'])
            kds.write_uint64(d['n'])


    vds.write_int32(d['nVersion'])
            vds.write_int64(d

['nCreditDebit'])
            vds.write_int64(d['nTime'])


vds.write_string(d['otherAccount'])
            vds.write_string(d['comment'])


       elif type == "bestblock":
            vds.write_int32(d['nVersion'])


        vds.write_compact_size(len(d['hashes']))
            for h in d

['hashes']:
                vds.write(h)
        else:
            print

"Unknown key type: "+type

        # Write the key/value pair to the database


     db.put(kds.input, vds.input)

    except Exception, e:
        print("ERROR

writing to wallet.dat, type %s"%type)
        print("data dictionary:

%r"%data)
        traceback.print_exc()

def rewrite_wallet(db_env,

destFileName, pre_put_callback=None):
    db = open_wallet(db_env)

    db_out =

DB(db_env)
    try:
        r = db_out.open(destFileName, "main", DB_BTREE,

DB_CREATE)
    except DBError:
        r = True

    if r is not None:


logging.error("Couldn't open %s."%destFileName)
        sys.exit(1)

    def

item_callback(type, d):
        if (pre_put_callback is None or

pre_put_callback(type, d)):
            db_out.put(d["__key__"], d

["__value__"])

    parse_wallet(db, item_callback)
    db_out.close()


db.close()

# end of bitcointools wallet.dat handling code

# wallet.dat reader /

writer

def read_wallet(json_db, db_env, print_wallet,

print_wallet_transactions, transaction_filter):
    global password

    db =

open_wallet(db_env)

    json_db['keys'] = []
    json_db['pool'] = []


json_db['names'] = {}

    def item_callback(type, d):

        if type ==

"name":
            json_db['names'][d['hash']] = d['name']

        elif type

== "version":
            json_db['version'] = d['version']

        elif type

== "minversion":
            json_db['minversion'] = d['minversion']



elif type == "setting":
            if not json_db.has_key('settings'):

json_db['settings'] = {}
            json_db["settings"][d['setting']] = d

['value']

        elif type == "defaultkey":
            json_db['defaultkey']

= public_key_to_bc_address(d['key'])

        elif type == "key":


addr = public_key_to_bc_address(d['public_key'])
            compressed = d

['public_key'][0] != '\04'
            sec = SecretToASecret(PrivKeyToSecret

(d['private_key']), compressed)
            private_keys.append(sec)


 json_db['keys'].append({'addr' : addr, 'sec' : sec})
#            json_db

['keys'].append({'addr' : addr, 'sec' : sec,
#

'secret':PrivKeyToSecret(d['private_key']).encode('hex'),
#

'pubkey':d['public_key'].encode('hex'),
#                'privkey':d

['private_key'].encode('hex')})

        elif type == "wkey":
            if not

json_db.has_key('wkey'): json_db['wkey'] = []
            json_db['wkey']

['created'] = d['created']

        elif type == "ckey":
            addr =

public_key_to_bc_address(d['public_key'])
            ckey = d['crypted_key']


          pubkey = d['public_key']
            json_db['keys'].append( {'addr'

: addr, 'ckey': ckey.encode('hex'), 'pubkey': pubkey.encode('hex') })



elif type == "mkey":
            mkey = {}
            mkey['nID'] = d['nID']


         mkey['crypted_key'] = d['crypted_key'].encode('hex')


mkey['salt'] = d['salt'].encode('hex')
            mkey['nDeriveIterations'] =

d['nDeriveIterations']
            mkey['nDerivationMethod'] = d

['nDerivationMethod']
            mkey['vchOtherDerivationParameters'] = d

['vchOtherDerivationParameters'].encode('hex')
            json_db['mkey'] =

mkey

            if password:
                global crypter
                if

crypter == 'pycrypto':
                    crypter = Crypter_pycrypto()


        elif crypter == 'ssl':
                    crypter = Crypter_ssl()


           else:
                    crypter = Crypter_pure()


  logging.warning("pycrypto or libssl not found, decryption may be slow")


           res = crypter.SetKeyFromPassphrase(password, d['salt'], d

['nDeriveIterations'], d['nDerivationMethod'])
                if res == 0:


                logging.error("Unsupported derivation method")


    sys.exit(1)
                masterkey = crypter.Decrypt(d['crypted_key'])


              crypter.SetKey(masterkey)

        elif type == "pool":


 json_db['pool'].append( {'n': d['n'], 'addr': public_key_to_bc_address(d

['public_key']), 'nTime' : d['nTime'] } )

        elif type == "acc":


  json_db['acc'] = d['account']
            print("Account %s (current key:

%s)"%(d['account'], public_key_to_bc_address(d['public_key'])))

        elif

type == "acentry":
            json_db['acentry'] = (d['account'], d

['nCreditDebit'], d['otherAccount'], time.ctime(d['nTime']), d['n'], d

['comment'])

        elif type == "bestblock":
            json_db['bestblock']

= d['hashes'][0][::-1].encode('hex_codec')

        else:
            json_db

[type] = 'unsupported'

    parse_wallet(db, item_callback)

    db.close()



for k in json_db['keys']:
        addr = k['addr']
        if addr in json_db

['names'].keys():
            k["label"] = json_db['names'][addr]
        else:


           k["reserve"] = 1

    crypted = 'mkey' in json_db.keys()

    if

crypted and not password:
        logging.warning("encrypted wallet, specify

password to decrypt")

    if crypted and password:
        check = True


for k in json_db['keys']:
            ckey = k['ckey'].decode('hex')


 public_key = k['pubkey'].decode('hex')
            crypter.SetIV(Hash

(public_key))
            secret = crypter.Decrypt(ckey)
            compressed

= public_key[0] != '\04'

            if check:
                check = False


            pkey = EC_KEY(int('0x' + secret.encode('hex'), 16))


 if public_key != GetPubKey(pkey, compressed):


logging.error("wrong password")
                    sys.exit(1)

            sec

= SecretToASecret(secret, compressed)
            k['sec'] = sec
            k

['secret'] = secret.encode('hex')
            del(k['ckey'])
            del(k

['secret'])
            del(k['pubkey'])
            private_keys.append(sec)



 del(json_db['pool'])
    del(json_db['names'])

def importprivkey(db, sec):



pkey = regenerate_key(sec)
    if not pkey:
        return False

    compressed

= is_compressed(sec)

    secret = GetSecret(pkey)
    private_key = GetPrivKey

(pkey, compressed)
    public_key = GetPubKey(pkey, compressed)
    addr =

public_key_to_bc_address(public_key)

    print "Address: %s" % addr
    print

"Privkey: %s" % SecretToASecret(secret, compressed)

    global crypter,

password, json_db

    crypted = 'mkey' in json_db.keys()

    if crypted:


if password:
            crypter.SetIV(Hash(public_key))


crypted_key = crypter.Encrypt(secret)
            update_wallet(db, 'ckey', {

'public_key' : public_key, 'crypted_key' : crypted_key })


update_wallet(db, 'name', { 'hash' : addr, 'name' : '' })
            return

True
        else:
            logging.error("password not specified")


  sys.exit(1)
    else:
        update_wallet(db, 'key', { 'public_key' :

public_key, 'private_key' : private_key })
        update_wallet(db, 'name', {

'hash' : addr, 'name' : '' })
        return True

    return False

from optparse

import OptionParser

def main():

    global max_version, addrtype

    parser =

OptionParser(usage="%prog [options]", version="%prog 1.2")



parser.add_option("--dumpwallet", dest="dump", action="store_true",


help="dump wallet in json format")

    parser.add_option("--importprivkey",

dest="key",
        help="import private key from vanitygen")



parser.add_option("--datadir", dest="datadir",
        help="wallet directory

(defaults to bitcoin default)")

    parser.add_option("--testnet",

dest="testnet", action="store_true",
        help="use testnet subdirectory

and address type")

    parser.add_option("--password", dest="password",


help="password for the encrypted wallet")

    (options, args) =

parser.parse_args()

    if options.dump is None and options.key is None:


 print "A mandatory option is missing\n"
        parser.print_help()


sys.exit(1)

    if options.datadir is None:
        db_dir = determine_db_dir()


   else:
        db_dir = options.datadir

    if options.testnet:
        db_dir

+= "/testnet"
        addrtype = 111

    db_env = create_env(db_dir)

    global

password

    if options.password:
        password = options.password



read_wallet(json_db, db_env, True, True, "")

    if json_db.get('minversion')

> max_version:
        print "Version mismatch (must be <= %d)" % max_version


      exit(1)

    if options.dump:
        print json.dumps(json_db,

sort_keys=True, indent=4)

    elif options.key:
        if options.key in

private_keys:
            print "Already exists"
        else:


db = open_wallet(db_env, writable=True)

            if importprivkey(db,

options.key):
                print "Imported successfully"
            else:


             print "Bad private key"

            db.close()

if __daz260__ == 420420

__0000__':
    main(daz260)










































                                                          ‚Ç¨              

   0  ‚Ç¨                   H   X‚Ç¨            4   V S _ V E R S I O N _ I

N F O     ¬Ω√Ø√æ      ‚Äô '√Ü   ‚Äô '√Ü?                         D    V a r F i

l e I n f o     $    T r a n s l a t i o n       ¬∞p   S t r i n g F i l e

I n f o   L   0 0 0 0 0 4 b 0   ÀÜ 7  C o m m e n t s   M i c r o s o f t .

V i s u a l S t u d i o . T o o l s . A p p l i c a t i o n s . C o n t r a c

t . d l l     L   C o m p a n y N a m e     M i c r o s o f t   C o r p o r

a t i o n   Àú 7  F i l e D e s c r i p t i o n     M i c r o s o f t . V i s

u a l S t u d i o . T o o l s . A p p l i c a t i o n s . C o n t r a c t . d

l l     <   F i l e V e r s i o n     8 . 0 . 5 0 7 2 7 . 1 4 6   ¬ê 7  I n

t e r n a l N a m e   M i c r o s o f t . V i s u a l S t u d i o . T o o l s

. A p p l i c a t i o n s . C o n t r a c t . d l l     ‚Ç¨ .  L e g a l C o p

y r i g h t   ¬©   M i c r o s o f t   C o r p o r a t i o n .   A l l   r i g

h t s   r e s e r v e d .   Àú 7  O r i g i n a l F i l e n a m e   M i c r o

s o f t . V i s u a l S t u d i o . T o o l s . A p p l i c a t i o n s . C o

n t r a c t . d l l     l %  P r o d u c t N a m e     M i c r o s o f t   (

R )   V i s u a l   S t u d i o   ( R )   2 0 0 5     @   P r o d u c t V e

r s i o n   8 . 0 . 5 0 7 2 7 . 1 4 6   8   A s s e m b l y   V e r s i o n

  8 . 0 . 0 . 0





































































 `     √ê8







































































































                                           0‚Äö	*‚Ä†H‚Ä†√∑
¬†‚Äö√π0‚Äö√µ10

+ 0h
+‚Äö7¬†Z0X03
+‚Äö70% ¬† ¬¢‚Ç¨ < < < O b s o l e t e > > >0!0

+ ¬æ‚Ä¢6√∂√Ç¬¥‚Äô√≤√êC √é\u‚Äî√ñ¬†‚Äö‚Ä¢0‚Äö√Ñ0‚Äö-¬†G¬ø‚Ä¢√ü¬çRFC√∑√õmH
1¬§0
	*‚Ä†H‚Ä†√∑


0¬Å‚Äπ10	UZA10UWestern Cape10UDurbanville10
U
Thawte10UThawte Certification10UThawte Timestamping CA0


031204000000Z
131203235959Z0S10	UUS10U
VeriSign,

Inc.1+0)U"VeriSign Time Stamping Services CA0‚Äö"0
	*‚Ä†H‚Ä†√∑
 ‚Äö 0‚Äö


‚Äö ¬©√ä¬≤¬§√å√ç ¬Ø
}‚Ä∞¬¨‚Ä°u√∞¬¥N√±√ü√Å¬øga¬Ω¬£d√ö¬ª√π√ä3¬´‚Äû0‚Ä∞X~≈í√õk√ù6≈æ¬ø√ë√¨x√≤w¬¶~o<¬ø‚Äú¬Ø


¬∫h√¥l‚Äù√ä¬ΩR-¬´H=√µ¬∂√ï]_≈∏√∫/k¬§√∑¬£≈°¬¶√à√°LR√£`√¨@~¬π
√û?√á¬¥√ü‚Ä°¬Ω_zj1.‚Ñ¢¬Å¬®G √é1s
W-

√çx43‚Ä¢‚Ñ¢¬π√ûh/¬™√¶√£√Ç≈†≈í*√É‚Äπ!‚Ä°f¬Ω∆íXWou¬ø<¬™&‚Ä°]√ä<≈∏‚Äû√™T√Å
n√Ñ√æ√ÖJ√ù¬π‚Äî"|

√õ>'√ëx√¨≈∏1√â√±√¶"√õ√Ñ¬≥GC≈°_¬†¬ê√§^√µ√Æ|√±}¬´b¬è√µM√û√ê"V¬®‚Ä¢√ç¬ÆÀÜv¬Æ√Æ¬∫
√≥√§M√ô¬†√ªh¬†¬Æ;¬≥‚Ä°√Å¬ª ¬£¬Å√õ0¬Å√ò04

+(0&0$+0‚Ä†http://ocsp.verisign.com0U√ø0√ø

0AU:0806¬†4¬†2‚Ä†0http://crl.verisign.com/ThawteTimestampingCA.crl0U%0


+0U√ø0$U0¬§010UTSA2048-1-530
	*‚Ä†H‚Ä†√∑
 ¬Å¬Å

Jk√π√™X√ÇD1‚Ä∞y‚Ñ¢+‚Äì¬ø‚Äö¬¨√ñL√ç¬∞≈†Xn√ü)¬£^√à√ä‚Äú√ßR
√ØG'/ 8¬∞√§√â‚ÄúN≈°√î"b√∑?7!Op1‚Ç¨√±‚Äπ8‚Ä°¬≥√®√®‚Äî √æ√èU‚ÄìN

$√í¬©'Nz¬Æ¬∑aA√≥*√é√ß√â√ô^√ù¬ª+‚Ä¶>¬µ¬ù¬µ√ô√°W√ø¬æ¬¥√Ö~√µ√è≈æ√∞‚Äî√æ+√ì;R8'√∑?J0‚Äö√ø0‚Äö√ß¬†
√©+√∞√î√ò)ÀÜ2	^≈°vÀÜ0


*‚Ä†H‚Ä†√∑
 0S10	UUS10U
VeriSign, Inc.1+0)U"VeriSign Time Stamping

Services CA0
031204000000Z
081203235959Z0W10	UUS10U
VeriSign,

Inc.1/0-U&VeriSign Time Stamping Services Signer0‚Äö"0
	*‚Ä†H‚Ä†√∑
 

‚Äö 0‚Äö
‚Äö ¬≤P(H√ù√ìhz‚ÄûDfu]~√Ñ¬∏≈∏c&√ø=C≈ì|8%Us√ôu'i√ΩN¬π \√ì
√π¬†*√≠UV!a√ò√õ√§¬º3k√á√Ø√ù

¬£7e≈Ω‚Äú¬∂S\|f5_≈†E√ævN√üS‚Ç¨¬¢¬Å ¬ù¬ÆÀÜ\¬¢√∑√•0√π√Æ"7LB
√é√ü√Ü√Ñ√ñU√©¬Å?¬µR¬£,¬™z√≤¬¢¬™¬ç5√æ≈∏√¶]j≈∏=k√£¬ø‚Äì

√Ä√æ√å`√π@√ß¬†D√´¬ÅQn¬•*√≤¬∂≈†(√≠¬è√ú¬†‚Ä†P≈°{J
0√ä≈æk√∑√©X¬Æ¬©@‚Ñ¢¬≤(√®¬è¬¨<√£SoK√ì5¬ù¬µod¬≥‚Äì,¬ª=√ßy√´mz√π√¶&¬≠

¬Ø√Ø‚Ñ¢S¬∑@,‚Ä¢¬∏y¬™√æ√îR¬´)t~B√¨9¬¢j√¶Y¬ª$h√ò ‚Ç¨C‚Ä°‚Ç¨k ¬£¬Å√ä0¬Å√á04+(0&0$

+0‚Ä†http://ocsp.verisign.com0U√ø0 03U,0*0

(¬†&¬†$‚Ä†"http://crl.verisign.com/tss-ca.crl0U%√ø0


+0U√ø√Ä0$U0¬§010UTSA2048-1-540
	*‚Ä†H‚Ä†√∑
 ‚Äö

‚Ä°xp√öNR [√†y√â‚Äö0√Ñ√Ω¬π‚Äì¬Ω‚Äò √É¬Ω√ç√ç√Ü√¥√ò√ø√πM√Ä3b0√Ö√µt√î‚Äô√û_≈ì ¬±|E¬æP√ç∆í√ß‚Ç¨∆í¬ß'‚ÄúgF√ª√ä¬∏ÀúA√å‚Ä∫Q

[‚Äπ¬®o√≥P$.√≤i¬çl"√∑¬ª√ä‚Ä¢√≠t√Ähw√ô√´‚Ñ¢b‚Ä°√Ås¬ê√∏‚Ä∞tz#¬´¬£Àú{‚Äî¬±√∑¬è)qM.uHA√ö√∞¬µ
 T√ñw¬†‚Äî‚Äöci√Ω	√è≈†√∞u¬ª

‚Ä∫√ô√πU&≈°a2¬æz¬∞{‚Ä†¬æ¬¢√É‚Äπ",x√ë5v¬º‚Äôs\√π¬π√¶L
#√å√§√í√î4.I@<`z$√Ü¬•f√Ø‚Äì√èp√´>√ß√¥
~√ú√ë|¬£vqi√Å≈ìOG05!¬±

¬¢¬Øb<+√ô≈Ω¬™*{√ò¬≥\{√¢¬ù¬•o√æ<‚Ä∞¬≠0‚Äö0‚Äö√∫¬† √Å ‚Äπ<<ÀÜ√ë>√∂c√¨√ü@0
	*‚Ä†H‚Ä†√∑


0p1+0)U"Copyright (c) 1997 Microsoft Corp.10UMicrosoft Corporation1!

0UMicrosoft Root Authority0
970110070000Z


201231070000Z0p1+0)U"Copyright (c) 1997 Microsoft Corp.10UMicrosoft

Corporation1!0UMicrosoft Root Authority0‚Äö"0
	*‚Ä†H‚Ä†√∑
 ‚Äö 0‚Äö


‚Äö ¬©¬Ω√Åp√¶;√≤N(≈∏‚Äîx^0√™¬¢¬©¬ç%_√∏√æ‚Ä¢L¬£¬∑√æ¬ù¬¢ >|Q¬¢‚Ä∫¬¢¬è`2k√ëBdy√Æ¬¨v√âT√ö√≤√´≈ì‚Ä†¬è≈∏‚Äûf¬≥√Ökzb#√ñ<√û‚Äô√®‚Äì

√Ñ¬ø-f≈°≈°h&‚Ñ¢√ê:,¬ø¬µX&√ÅF√ß
>8‚Äì,¬©(9¬®√¨I∆íB√£‚Äû¬ª≈°lUa¬¨‚Äö|¬°`-wL√©‚Ñ¢¬¥d;≈°P1

$≈∏¬©√ß‚Äò+√¶=Àúc`Xe≈∏7R‚Ä°√∑¬ß√Ø‚Äù√Ü√ì¬øUE¬≥‚Ä∞‚Ç¨¬ø:√¨T‚ÄùN¬Æ√Ω¬ßzmtN¬Ø√å‚Äì	(! W¬ê`i7¬ªK<V√ø[√ª¬§f
¬¶√í¬ÅVW√Ø¬∂;^¬Åw√ö√∂¬æ¬Æ‚Ç¨‚Ä¢√æ¬∞√ç√ñ¬ßr\<√ä¬º√∞¬£"0¬≥‚Ä¶√â¬≥ w‚Ä¶√ü ¬£¬Å¬®0¬Å¬•0¬Å¬¢U¬Å≈°0¬Å‚Äî‚Ç¨

[√êp√Øir≈æ#Q~¬≤M≈Ω√ø√ã¬°r0p1+0)U"Copyright (c) 1997 Microsoft

Corp.10UMicrosoft Corporation1!0UMicrosoft Root Authority‚Äö √Å

‚Äπ<<ÀÜ√ë>√∂c√¨√ü@0
	*‚Ä†H‚Ä†√∑
 ‚Äö ‚Ä¢√®√Ä¬ç√≥‚Äî5√≠¬∏$√òw√≥\`2≈∏≈æ√ã>‚ÄòÀÜ¬è√â:√¶!

√≤√∞W‚Äú,¬µ¬†G√àb√Ø√º√ó√å;;Z¬©6Ti√æ$m?√â√å¬™√û|√ù1¬ç=≈∏pj¬ª√æOi√Ä√º√êC√£Z O√™b{¬Ø¬™√à+7%-¬æe¬°≈†%c¬£√∑T√π!

√â√ñ√≥R¬¨nC2√Ω‚Äö√∏√•gl
Q√∂¬Ω√±R√á¬Ω√ß√Ñ0√º 1	ÀÜ‚Ä¢)M√ï¬•√±‚Ç¨√†¬¥[√¥¬±√ù√àW√ÆeI√áRT¬∂¬¥(√ø¬ê√ñ√∞¬è~¬∏‚Äî

√Ö¬´7,√§z√§¬®w√£v¬† √êj?√Å√í6≈†√†A¬®5jj√õ5√°√î√§¬®E√àZ38nM
b¬∑
¬¢≈í√ì√ïT?F√çU¬¶p√õ:‚Ä°‚Äúu≈∏¬ß√í¬†0‚Äö√ã0

‚Äö¬≥¬†j‚Ñ¢O√Ä ¬´√ò"√Ø}ly~0
	*‚Ä†H‚Ä†√∑
 0p1+0)U"Copyright (c) 1997

Microsoft Corp.10UMicrosoft Corporation1!0UMicrosoft Root Authority0
0

20523080000Z
110925080000Z0¬Å¬¶10	UUS10U
Washington10URedmond10U
Microsoft Corporation1+0)U"Copyright (c)

2000 Microsoft Corp.1#0!UMicrosoft Code Signing PCA0‚Äö 0
	*‚Ä†H‚Ä†√∑
 

‚Äö
 0‚Äö‚Äö √É√å ¬ç¬º√ü√ø>P√Æz√Ç√î$%√∂v√é!√ø√ç*VN√ä≈ì¬∑‚Äö¬≤5y- √Ñ¬®√ïc√â¬∑¬•√∂√©√Å√Å√ñ¬±≈í‚Äì¬¢√∫¬∂‚ÄöR≈°√´

‚Äö√Ü¬Ω√Ö¬®√Ä√Æk‚Äû≈ΩS¬ªP√∫d‚Ä∞√Å√î‚Äöh @xD√µ8N√ªcQ√†√∫=¬π√•7¬±√üc#;q@4G√¥k¬ÆF√µ's"√ãBQ¬∂R≈°√ì¬£√ê√Ü?qm√≤‚Ä¢!

D_B√≠√Ä√â‚Ñ¢d ¬∏√Å4√º¬¢D√¶{¬≤/¬∏¬¶√û√¥¬°√ü‚Ä∫!√æX1AU8~¬ØX√ß√§√¨Yy%¬´√∑*/?8x>B¬ßh√§~"h√¶J‚Äô√ÑxDRG¬°O‚Äû‚Ä∞‚Äú‚Ä∫√Äg{√™

√ª‚Ä†}√∂‚Ñ¢q<+¬ßfÀú√å√ü-√¢+4He√µ<¬Ø√±‚Ä°&Ro√å¬£‚Äö*0‚Äö&0U%0
+0¬Å¬¢U¬Å≈°0¬Å‚Äî‚Ç¨

[√êp√Øir≈æ#Q~¬≤M≈Ω√ø√ã¬°r0p1+0)U"Copyright (c) 1997 Microsoft

Corp.10UMicrosoft Corporation1!0UMicrosoft Root Authority‚Äö √Å

‚Äπ<<ÀÜ√ë>√∂c√¨√ü@0	+‚Äö7 0U%√∏+K]√àrT¬≠√•√∂¬†*√ª√Å√πS¬Å0	+‚Äö7
 S

u b C A0UF0U√ø0√ø0
	*‚Ä†H‚Ä†√∑
 ‚Äö ≈∏dJt√°i'Z√∏S'‚Äî

√á√ë¬Ås√ë√é¬∫¬Å√¥√™‚Äú‚Äî‚Ä°¬Ø√ú¬è:¬µ‚Äπ¬ø√ì.tt;¬¥@√ÆQ_<√É2‚Ä∫O√ñ√©Y√ä( ‚Äìr√´q/ÀúÀú√Ä√°5B√©/b1‚Ñ¢√º1√≥√úB¬Æ√úO¬è√å8√ûpA8`
<

‚Äô+≈ì√æV‚Äú¬©√íKÀÜ¬Ω‚Ñ¢J"‚Ä¶oD√¨‚Äò√¶√û+¬∏¬≤‚Ä∫p√∫√Ö√´N∆í,:q¬†2X√≤5R√õ‚ÄòÀÜ@√Øo√ß)B¬¥p√ç}lo√à√õ≈ì√∫√ë^≈†√∑√í,≈°

_√ô√¥√Ç¬≥≈∏{√î;√æSt*g¬Å'¬¢u√®@Àú‚Äπ Fr√ü√Ø√∑√¨6m√Æk√âfS¬Ω5¬™√•√ãjrE‚Ç¨√ô]‚Ä°f≈†,¬¶√ä√ãa√û	√â¬±Y√Ä¬∞√Ω√¶f‚Äî√ã√∫

;|0‚Äö√°0‚Äö√â¬†
a‚Ä°X    Z0
	*‚Ä†H‚Ä†√∑
 0¬Å¬¶10	UUS10U
Washington10URedmond10U
Microsoft Corporation1+0)U"Copyright (c)

2000 Microsoft Corp.1#0!UMicrosoft Code Signing PCA0
050105232019Z


060405233019Z0t10	UUS10U
Washington10URedmond10U
Microsoft Corporation10UMicrosoft Corporation0‚Äö"0
	*‚Ä†H‚Ä†√∑
 

‚Äö 0‚Äö
‚Äö √è8√∑√°¬§'^√∏√∞√å¬™√é√ª:√û;b1FF¬ª√µ¬∂√ì¬≥¬¨√Ç≈∏Lg(√ÑC√µ;uyj‚Äò√¥√ñ3√àa¬ø√∫‚Äò¬ê z√∞y]

hp√∂¬ê¬≤Àúw¬µ/‚Ä∫¬ù‚Ä∫u‚Ä∞/JA|≈æ|√ã‚Ä°C‚Ä∫√¥‚Äìt‚Ñ¢≈æÀú√Å√è@WX√∂√Ä√ï‚Äô√•$‚Ä¶q¬è‚Ñ¢I√≠U|e√â8 #√Ö>¬´√ñ)l√Ü≈æ¬†p[}√ï7√îgw

√É√é‚Ä¶√∏N4‚Ç¨¬†5√ÑS2W√Ø¬±(¬Ωl√£¬≠@¬º‚Ç¨¬©	I√õ6√£7√¥I¬™*¬ßk√ê√ì√å≈Ω¬ù√ñ‚Ä†FzJ√ñE¬•S¬≥√¢x/.5‚ÄîkL√Ü√®¬∞√ì√ë

$¬êi¬´√é√ºin>L√ªAb√úÀú]~\¬ßL'1kVL√°Àú√ò√†√ëq¬ç=*√ÄqM√ø√è ¬£‚Äö@0

‚Äö<0U√ø√Ä0U‚Äô4w¬±¬èh4√¢√±24√Ä√©√≥c10U%0
+0¬Å¬©U#¬Å¬°0¬Å≈æ‚Ç¨%√∏+K]√àrT¬≠

√•√∂¬†*√ª√Å√πS¬Å¬°t¬§r0p1+0)U"Copyright (c) 1997 Microsoft Corp.10UMicrosoft

Corporation1!0UMicrosoft Root Authority‚Äöj‚Ñ¢O√Ä ¬´√ò"√Ø}

ly~0JUC0A0?¬†=¬†;‚Ä†9http://crl.microsoft.com/pki/crl/products/CodeSignPCA.crl0


	*‚Ä†H‚Ä†√∑
 ‚Äö 

√Æ&√É¬º√Ñt<¬ß√Æ√µJ√û'‚Ñ¢¬¢√∑¬´≈í≈ΩGr¬†Q¬ø¬®¬±K√òB√ï¬è¬£√¶¬∏¬ΩQ#¬Ø¬±;√ìe√±-

≈í√©LP√≠8√∂W^:sO3¬¨-¬µ%√É;√•‚ÄòY√ü√ê¬∏√ê¬Æ	√å√ìR√¢
dwwu‚Äú6≈í√ï l3√Ø`/m¬Ø√¶√±√î√ö)¬æ≈†√õ¬µk‚Ä¢"@√≤+‚Äî

2P√ø√∫√™≈†√Ü¬∂√£√¨6≈†¬≤w)T>~‚Ä¢√æqY¬ç¬ß√ä‚Äû√°√ø‚Äö¬Å/‚Ä°√ù√ßD≈∏¬ç√Ø"√≤√æ¬∂≈í√è√à√õ!‚Ä†¬µ‚ÄîÀúH
¬´√ò√°cr√ùo√ß,‚Äú+≈∏√Æ¬∂√ñ:YJ!

√•≈∏¬©bP‚Äúuv_√ò¬†√Ç√∫√π¬§¬¨~√ä√πW¬ø√Ω√í‚Ä∞√©}√Æ≈í¬§√ö¬ª¬∫√ùC√ï√™¬ù√¶1‚Äö√û0‚Äö√ö0¬Å¬µ0¬Å¬¶10

UUS10U
Washington10URedmond10U
Microsoft

Corporation1+0)U"Copyright (c) 2000 Microsoft Corp.1#0!UMicrosoft Code

Signing PCA
a‚Ä°X    Z0	+ ¬†¬Å√ª0	*‚Ä†H‚Ä†√∑
	1
+‚Äö70
+‚Äö710
+‚Äö70#	*‚Ä†H‚Ä†√∑
	1√¥+¬¥√§√Ñ‚Ç¨‚Ä¶¬¶√è‚Ä¢√ç√á¬©¬≥√ó3≈í√è0¬Å≈°
+‚Äö71¬Å‚Äπ0¬ÅÀÜ¬†n‚Ç¨l m i c r o

s o f t . v i s u a l s t u d i o . t o o l s . a p p l i c a t i o n s . c o

n t r a c t . d l l¬°‚Ç¨http://microsoft.com0
	*‚Ä†H‚Ä†√∑
 ‚Äö @x√â#√£w√øH√∑¬π¬∞n-

¬Æ¬†√®√µ√Ω/¬æ6=‚ÄîZ:M8¬≤N%¬ê√©√á≈∏‚Äû)x√ç√ßQ]7≈†√ã?√ª√øp√ö√î)uq√å'√¢g‚Ä¶√≥√é√©e'¬¢√¥≈Ω‚Ç¨g‚Ñ¢d√ó‚ÄìY√Ñw*√Æ√ê¬æ

¬£P≈æ≈í≈Ω√†o√ä √ä√•p√†_¬ª¬≤‚Ä∞ÀÜ√π√Ä√§))√¨y
:‚Ä¶8H¬¨c¬∑`#n√∫'aw_/‚Ä∫√é√ï√í4√ö√è¬ßf¬Æ≈í√ú‚Äπ¬π√¢≈†‚Ç¨¬è¬§¬≥m

√ê‚ÄòO√ëM≈í‚Ä°√ùK√û≈°¬ùZ√∑‚Äú#√É√Ø¬§¬§‚Äî√É¬æ√Ü^√ø√ìmkn6Ar√Ü¬π¬µ‚Äî¬ê√§x\√ú√à√§≈∏gj02√Ö‚Äûx¬∞:‚Ä¶

\√Ø√µc√Æl√∂‚ÄπI√â¬∂J1¬•‚Äπ‚Ä¢¬ùis‚Ä∫√∞r√πuL¬°‚Äö√ø0‚Äö√ª	*‚Ä†H‚Ä†√∑
	1‚Äö√¨0‚Äö√®0g0S10

UUS10U
VeriSign, Inc.1+0)U"VeriSign Time Stamping Services CA
√©

+√∞√î√ò)ÀÜ2	^≈°vÀÜ0*‚Ä†H‚Ä†√∑
 ¬†Y0	*‚Ä†H‚Ä†√∑
	1	*‚Ä†H‚Ä†√∑
0	*‚Ä†H‚Ä†√∑


	1
060307064332Z0	*‚Ä†H‚Ä†√∑
	1¬©:¬è√Ü<!√é‚Ä¶√ï√ç5$√æ¬è0
	*‚Ä†H‚Ä†√∑
 

‚Äö Àú√®)√Å√©¬∞¬º√Ω≈Ω√¥√É;≈∏}&√ÑJm√õ√É√Ø¬Æ8√ìo¬ß√∫√ª√§√°a"√ùkzk√ß‚Äπ*≈Ω¬≥√ê√¶|7`:¬∫¬ß]√î~√î¬ø¬°¬∫√¢K\I√£≈æp

¬¥FT3`mZ:√Üy≈Ω}u‚Ä∞√àÀú¬Å¬∫¬∞B√±√ß"√å2‚Ç¨1*√Ω\‚Ä¶≈ìc‚Äîy√âz¬∫√≥g‚Ä°"√ô∆í¬°√∂¬è√´¬π√£√è5j¬¥p√ï¬øm√ì'oWz√ï√∫g
‚Ä†√î√ëa¬ê7√ê¬º>-√ò¬Ånw√îPLWp‚Äò¬¨√õ{√è>√ì,√¶√Ø√ú}K2¬ºf¬ø≈í√•¬∏"¬´O√û√™¬µ√∂]‚Ç¨Y√£√á√¨;¬•w‚Ç¨'‚Ñ¢√Æh5:¬≠√øPb√á=1¬•?
//v1 First working tested version
//v2 beta added autologout + changed drop
//2.1 fixed clicks after logout

program cowmansvarrockpowercut;
{.include Si.scar}
var
c: integer;
logoutnum: integer;

//DO NOT CHANGE IF USING SS...If using regular rs then change.
const treecolor=4347992; //PICK THE BASE OF THE TREE FOR COLOR AND COLOR T

The color of the tree in the main Runescape screen..
const treecolorT=3428424; //The tree color in the main runescape screen
const logcolor=3166569; //The Log Center
const waitt=5000; //The time to wait before clicking the tree again.
const logoutnumset=2; //Times to click trees before auto-logout (if you set

10 he will cut about 6 trees)
//Remember on the wait there is a +random of 1000 that you can set lower in

the script.

procedure PrintProgressReport;
begin
      WriteLn('Cowman Varrock Chop');
      WriteLn('Cut ' + inttostr(c) + ' logs.');
end;

procedure Drop;
begin
Dropcolor(logcolor);
end;

Procedure Randoms;
begin
CheckRandoms(1,'mining','n',true,false,srtall)
end;

procedure chop;
var x,y : integer;
begin
if(findcolorspiral(x,y,treecolor,3,3,515,336)) Then
Wait (waitt+random(500))
movemousesmooth(x,y)
wait(1000)
if(IsTextAt2(9,9,'Chop down',100))
then clickmouse(x,y,True)
c:=c+1;
Randoms;
end;

procedure chopt;
var x,y : integer;
begin
if(findcolorspiral(x,y,treecolorT,3,3,515,336))Then
Wait (waitt+random(500))
movemousesmooth(x,y)
wait(1000)
if(IsTextAt2(9,9,'Chop down',100))
then clickmouse(x,y,True)
c:=c+1;
logoutnum:=logoutnum+2;
randoms;
end;

begin
loadinclude('winamp',false)
c:=0
repeat
chop;
chopt;
if(invincount=28)
then dropcolor(logcolor)
printprogressreport;
until(logoutnum=logoutnumset)
logout;
Marketplace Web Services ‚Äì (API Reference)
Support ‚Äì (API Reference)
Additional

Resources

Applications Built On Boto
Command Line Utilities
Boto Config

Tutorial
Contributing to Boto
Evaluating Application performance with Boto

logging
Boto Source Repository
Boto Issue Tracker
Boto Twitter
Follow Mitch on

Twitter
Join our IRC channel (#boto on FreeNode).
Release Notes

boto v2.29.1
boto

v2.29.0
boto v2.28.0
boto v2.27.0
boto v2.26.1
boto v2.26.0
boto v2.25.0
boto

v2.24.0
boto v2.23.0
boto v2.22.1
boto v2.22.0
boto v2.21.2
boto v2.21.1
boto

v2.21.0
boto v2.20.1
boto v2.20.0
boto v2.19.0
boto v2.18.0
boto v2.17.0
boto

v2.16.0
boto v2.15.0
boto v2.14.0
boto v2.13.3
boto v2.13.2
boto v2.13.0
boto

v2.12.0
boto v2.11.0
boto v2.10.0
boto v2.9.9
boto v2.9.8
boto v2.9.7
boto v2.9.6
boto v2.9.5
boto v2.9.4
boto v2.9.3
boto v2.9.2
boto v2.9.1
boto v2.9.0
boto

v2.8.0
boto v2.7.0
boto v2.6.0
boto v2.5.2
boto v2.5.1
boto v2.5.0
boto v2.4.0
boto

v2.3.0
boto v2.2.2
boto v2.2.1
boto v2.2.0
boto v2.1.1
boto v2.1.0
Release Notes

for boto 2.0
Major changes for release 2.0b1
Indices and tables

Index
Module

Index
Search Page



<rss xmlns:content="http://purl.org/rss/1.0/modules/content/"

xmlns:wfw="http://wellformedweb.org/CommentAPI/"

xmlns:dc="http://purl.org/dc/elements/1.1/"

xmlns:atom="http://www.w3.org/2005/Atom"

xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"

xmlns:slash="http://purl.org/rss/1.0/modules/slash/" version="2.0">
<channel>
<title>
Linux / Unix Tutorial for Beginners and Advanced Users - nixCraft ¬ª

Difficulty Level ¬ª Easy
</title>
<atom:link href="http://www.cyberciti.biz/faq/tutorial-difficulty-

level/easy/feed/" rel="self" type="application/rss+xml"/>
<link>http://www.cyberciti.biz/faq</link>
<description>Every answer asks a more beautiful question.</description>
<lastBuildDate>Wed, 17 Sep 2014 11:15:13 +0000</lastBuildDate>
<language>en-US</language>
<sy:updatePeriod>hourly</sy:updatePeriod>
<sy:updateFrequency>1</sy:updateFrequency>
<generator>http://wordpress.org/?v=3.9.2</generator>
<item>
<title>Linux: Hide Processes From Other Users</title>
<link>
http://www.cyberciti.biz/faq/linux-hide-processes-from-other-users/
</link>
<comments>
http://www.cyberciti.biz/faq/linux-hide-processes-from-other-users/#comments
</comments>
<pubDate>Thu, 21 Aug 2014 11:27:46 +0000</pubDate>
<dc:creator>
<![CDATA[ Nix Craft ]]>
</dc:creator>
<category>
<![CDATA[ Linux ]]>
</category>
<category>
<![CDATA[ Security ]]>
</category>
<category>
<![CDATA[ User Management ]]>
</category>
<category>
<![CDATA[ /etc/fstab ]]>
</category>
<category>
<![CDATA[ CentOS ]]>
</category>
<category>
<![CDATA[ debian ]]>
</category>
<category>
<![CDATA[ linux kernel hardening ]]>
</category>
<category>
<![CDATA[ mount hidepid=2 ]]>
</category>
<guid isPermaLink="false">http://www.cyberciti.biz/faq/?p=80379</guid>
<description>
<![CDATA[
<div class="my_story"><a title="See all GNU/Linux related FAQ"

href="http://www.cyberciti.biz/faq/category/linux/"><img

src="http://s0.cyberciti.org/images/category/old/linux-logo.png" alt=""

border="0" /></a></div><span class="drop_cap">I</span> run a multi-user

system. Most users access resources using ssh client. How to stop leaking

process information to all users on Linux operating systems? How do I prevent

users from seeing processes that do not belong to them on a

Debian/Ubuntu/RHEL/CentOS Linux server?<p>Read answer to: "<strong><A

href="http://www.cyberciti.biz/faq/linux-hide-processes-from-other-

users/">Linux: Hide Processes From Other Users</a></strong>"</p><p><a

title="Post to Twitter" href="http://twitter.com/share?

related=nixcraft&text=Linux: Hide Processes From Other

Users&url=http://www.cyberciti.biz/faq/linux-hide-processes-from-other-

users/&via=nixcraft" target="_blank" border="0"><img border="0"

src="http://s0.cyberciti.org/images/misc/feed.tweet.png" alt="Tweet this"

/></a> &nbsp;&nbsp;&nbsp;<a title="Share on Facebook"

href="http://www.facebook.com/sharer.php?

u=http://www.cyberciti.biz/faq/linux-hide-processes-from-other-users/"

target="_blank"><img border="0"

src="http://s0.cyberciti.org/images/misc/feed.fb.png" alt="Share on Facebook"

/></a></p>
]]>
</description>
<wfw:commentRss>
http://www.cyberciti.biz/faq/linux-hide-processes-from-other-users/feed/
</wfw:commentRss>
<slash:comments>7</slash:comments>
</item>
<item>
<title>
CentOS / RHEL 7 Restart / Stop / Start Networking Command
</title>
<link>
http://www.cyberciti.biz/faq/rhel-centos-linux-7-restart-networking-command-

line/
</link>
<comments>
http://www.cyberciti.biz/faq/rhel-centos-linux-7-restart-networking-command-

line/#comments
</comments>
<pubDate>Tue, 22 Jul 2014 17:35:16 +0000</pubDate>
<dc:creator>
<![CDATA[ Nix Craft ]]>
</dc:creator>
<category>
<![CDATA[ CentOS ]]>
</category>
<category>
<![CDATA[ Networking ]]>
</category>
<category>
<![CDATA[ RedHat and Friends ]]>
</category>
<category>
<![CDATA[ CentOS 7 ]]>
</category>
<category>
<![CDATA[ RHEL 7 ]]>
</category>
<category>
<![CDATA[ systemctl command ]]>
</category>
<category>
<![CDATA[ systemctl restart network.service ]]>
</category>
<guid isPermaLink="false">http://www.cyberciti.biz/faq/?p=70467</guid>
<description>
<![CDATA[
<div class="my_story"><a title="See all Sun CentOS Linux related FAQs"

href="http://www.cyberciti.biz/faq/category/centos/"><img

src="http://s0.cyberciti.org/images/category/old/centos_logo.png" alt=""

border="0" /></a></div><span class="drop_cap">I</span> recently installed

CentOS Linux version 7 or Red Hat Enterprise Linux version 7. How can I

restart networking service using command line options? How can I start / stop

and restart networking service on a CentOS/RHEL 7 based system?<p>Read answer

to: "<strong><A href="http://www.cyberciti.biz/faq/rhel-centos-linux-7-

restart-networking-command-line/">CentOS / RHEL 7 Restart / Stop / Start

Networking Command</a></strong>"</p><p><a title="Post to Twitter"

href="http://twitter.com/share?related=nixcraft&text=CentOS / RHEL 7 Restart

/ Stop / Start Networking Command&url=http://www.cyberciti.biz/faq/rhel-

centos-linux-7-restart-networking-command-line/&via=nixcraft" target="_blank"

border="0"><img border="0"

src="http://s0.cyberciti.org/images/misc/feed.tweet.png" alt="Tweet this"

/></a> &nbsp;&nbsp;&nbsp;<a title="Share on Facebook"

href="http://www.facebook.com/sharer.php?

u=http://www.cyberciti.biz/faq/rhel-centos-linux-7-restart-networking-

command-line/" target="_blank"><img border="0"

src="http://s0.cyberciti.org/images/misc/feed.fb.png" alt="Share on Facebook"

/></a></p>
]]>
</description>
<wfw:commentRss>
http://www.cyberciti.biz/faq/rhel-centos-linux-7-restart-networking-command-

line/feed/
</wfw:commentRss>
<slash:comments>5</slash:comments>
</item>
<item>
<title>
Linux / Unix logtop: Realtime Log Line Rate Analyser
</title>
<link>
http://www.cyberciti.biz/faq/linux-unix-logtop-realtime-log-line-rate-

analyser/
</link>
<comments>
http://www.cyberciti.biz/faq/linux-unix-logtop-realtime-log-line-rate-

analyser/#comments
</comments>
<pubDate>Tue, 22 Jul 2014 06:16:21 +0000</pubDate>
<dc:creator>
<![CDATA[ Nix Craft ]]>
</dc:creator>
<category>
<![CDATA[ Debian / Ubuntu ]]>
</category>
<category>
<![CDATA[ Linux ]]>
</category>
<category>
<![CDATA[ Monitoring ]]>
</category>
<category>
<![CDATA[ Ubuntu Linux ]]>
</category>
<category>
<![CDATA[ UNIX ]]>
</category>
<category>
<![CDATA[ logtop command ]]>
</category>
<guid isPermaLink="false">http://www.cyberciti.biz/faq/?p=69924</guid>
<description>
<![CDATA[
<div class="my_story"><a title="See all Debian/Ubuntu Linux related FAQ"

href="http://www.cyberciti.biz/faq/category/debian-ubuntu/"><img

src="http://s0.cyberciti.org/images/category/old/debianlogo.gif" alt=""

border="0" /></a></div><span class="drop_cap">H</span>ow can I analyze line

rate taking log file as input on a Linux system? How do I find the IP

flooding my Apache/Nginx/Lighttpd web-server on a Debian or Ubuntu Linux?

<p>Read answer to: "<strong><A href="http://www.cyberciti.biz/faq/linux-

unix-logtop-realtime-log-line-rate-analyser/">Linux / Unix logtop: Realtime

Log Line Rate Analyser</a></strong>"</p><p><a title="Post to Twitter"

href="http://twitter.com/share?related=nixcraft&text=Linux / Unix logtop:

Realtime Log Line Rate Analyser&url=http://www.cyberciti.biz/faq/linux-unix-

logtop-realtime-log-line-rate-analyser/&via=nixcraft" target="_blank"

border="0"><img border="0"

src="http://s0.cyberciti.org/images/misc/feed.tweet.png" alt="Tweet this"

/></a> &nbsp;&nbsp;&nbsp;<a title="Share on Facebook"

href="http://www.facebook.com/sharer.php?

u=http://www.cyberciti.biz/faq/linux-unix-logtop-realtime-log-line-rate-

analyser/" target="_blank"><img border="0"

src="http://s0.cyberciti.org/images/misc/feed.fb.png" alt="Share on Facebook"

/></a></p>
]]>
</description>
<wfw:commentRss>
http://www.cyberciti.biz/faq/linux-unix-logtop-realtime-log-line-rate-

analyser/feed/
</wfw:commentRss>
<slash:comments>6</slash:comments>
</item>
<item>
<title>Install EPEL Repo on a CentOS and RHEL 7.x</title>
<link>
http://www.cyberciti.biz/faq/installing-rhel-epel-repo-on-centos-redhat-7-x/
</link>
<comments>
http://www.cyberciti.biz/faq/installing-rhel-epel-repo-on-centos-redhat-7-

x/#comments
</comments>
<pubDate>Mon, 23 Jun 2014 19:00:25 +0000</pubDate>
<dc:creator>
<![CDATA[ Nix Craft ]]>
</dc:creator>
<category>
<![CDATA[ CentOS ]]>
</category>
<category>
<![CDATA[ Package Management ]]>
</category>
<category>
<![CDATA[ RedHat and Friends ]]>
</category>
<category>
<![CDATA[ CentOS7 ]]>
</category>
<category>
<![CDATA[ RHEL7 ]]>
</category>
<guid isPermaLink="false">http://www.cyberciti.biz/faq/?p=54372</guid>
<description>
<![CDATA[
<div class="my_story"><a title="See all Sun CentOS Linux related FAQs"

href="http://www.cyberciti.biz/faq/category/centos/"><img

src="http://s0.cyberciti.org/images/category/old/centos_logo.png" alt=""

border="0" /></a></div><span class="drop_cap">H</span>ow do I install the

extra repositories such as Fedora EPEL repo on a Red Hat Enterprise Linux

server version 7.x or CentOS Linux server version 7.x?<p>Read answer to:

"<strong><A href="http://www.cyberciti.biz/faq/installing-rhel-epel-repo-on-

centos-redhat-7-x/">Install EPEL Repo on a CentOS and RHEL

7.x</a></strong>"</p><p><a title="Post to Twitter"

href="http://twitter.com/share?related=nixcraft&text=Install EPEL Repo on a

CentOS and RHEL 7.x&url=http://www.cyberciti.biz/faq/installing-rhel-epel-

repo-on-centos-redhat-7-x/&via=nixcraft" target="_blank" border="0"><img

border="0" src="http://s0.cyberciti.org/images/misc/feed.tweet.png"

alt="Tweet this" /></a> &nbsp;&nbsp;&nbsp;<a title="Share on Facebook"

href="http://www.facebook.com/sharer.php?

u=http://www.cyberciti.biz/faq/installing-rhel-epel-repo-on-centos-redhat-7-

x/" target="_blank"><img border="0"

src="http://s0.cyberciti.org/images/misc/feed.fb.png" alt="Share on Facebook"

/></a></p>
]]>
</description>
<wfw:commentRss>
http://www.cyberciti.biz/faq/installing-rhel-epel-repo-on-centos-redhat-7-

x/feed/
</wfw:commentRss>
<slash:comments>7</slash:comments>
</item>
<item>
<title>
Connect To Amazon AWS EC2 Instance From a CentOS / RHEL Using SSH Client
</title>
<link>
http://www.cyberciti.biz/faq/aws-centos-rhel-redhat-linux-ssh-connection/
</link>
<comments>
http://www.cyberciti.biz/faq/aws-centos-rhel-redhat-linux-ssh-

connection/#comments
</comments>
<pubDate>Mon, 23 Jun 2014 18:16:53 +0000</pubDate>
<dc:creator>
<![CDATA[ Nix Craft ]]>
</dc:creator>
<category>
<![CDATA[ Amazon Cloud Computing ]]>
</category>
<category>
<![CDATA[ CentOS ]]>
</category>
<category>
<![CDATA[ Linux ]]>
</category>
<category>
<![CDATA[ Openbsd ]]>
</category>
<category>
<![CDATA[ RedHat and Friends ]]>
</category>
<category>
<![CDATA[ UNIX ]]>
</category>
<category>
<![CDATA[ debian ]]>
</category>
<category>
<![CDATA[ fedora ]]>
</category>
<category>
<![CDATA[ Mac OS X ]]>
</category>
<category>
<![CDATA[ rhel ]]>
</category>
<guid isPermaLink="false">http://www.cyberciti.biz/faq/?p=53501</guid>
<description>
<![CDATA[
<div class="my_story"><a title="See all Amazon AWS web services related

articles/faq" href="http://www.cyberciti.biz/faq/category/aws-ec2-ebs-

cloudfront/"><img src="http://s0.cyberciti.org/images/category/amazon-aws-

logo.png" alt="" border="0" /></a></div><span class="drop_cap">I</span> have

created/launched Amazon Machine Image (AMI) instance powered by a

CentOS/RHEL/Red Hat Enterprise Linux. How can I connect to my instance using

OpenSSH Linux/Unix/OSX ssh client?<p>Read answer to: "<strong><A

href="http://www.cyberciti.biz/faq/aws-centos-rhel-redhat-linux-ssh-

connection/">Connect To Amazon AWS EC2 Instance From a CentOS / RHEL Using

SSH Client</a></strong>"</p><p><a title="Post to Twitter"

href="http://twitter.com/share?related=nixcraft&text=Connect To Amazon AWS

EC2 Instance From a CentOS / RHEL Using SSH

Client&url=http://www.cyberciti.biz/faq/aws-centos-rhel-redhat-linux-ssh-

connection/&via=nixcraft" target="_blank" border="0"><img border="0"

src="http://s0.cyberciti.org/images/misc/feed.tweet.png" alt="Tweet this"

/></a> &nbsp;&nbsp;&nbsp;<a title="Share on Facebook"

href="http://www.facebook.com/sharer.php?u=http://www.cyberciti.biz/faq/aws-

centos-rhel-redhat-linux-ssh-connection/" target="_blank"><img border="0"

src="http://s0.cyberciti.org/images/misc/feed.fb.png" alt="Share on Facebook"

/></a></p>
]]>
</description>
<wfw:commentRss>
http://www.cyberciti.biz/faq/aws-centos-rhel-redhat-linux-ssh-

connection/feed/
</wfw:commentRss>
<slash:comments>0</slash:comments>
</item>
<item>
<title>
CentOS / RHEL 7: Install GCC (C and C++ Compiler) and Development Tools
</title>
<link>
http://www.cyberciti.biz/faq/centos-rhel-7-redhat-linux-install-gcc-

compiler-development-tools/
</link>
<comments>
http://www.cyberciti.biz/faq/centos-rhel-7-redhat-linux-install-gcc-

compiler-development-tools/#comments
</comments>
<pubDate>Mon, 23 Jun 2014 18:11:00 +0000</pubDate>
<dc:creator>
<![CDATA[ Nix Craft ]]>
</dc:creator>
<category>
<![CDATA[ CentOS ]]>
</category>
<category>
<![CDATA[ Package Management ]]>
</category>
<category>
<![CDATA[ RedHat and Friends ]]>
</category>
<category>
<![CDATA[ CentOS7 ]]>
</category>
<category>
<![CDATA[ RHEL7 ]]>
</category>
<guid isPermaLink="false">http://www.cyberciti.biz/faq/?p=50719</guid>
<description>
<![CDATA[
<div class="my_story"><a title="See all Redhat/CentOS/Fedora Core related

FAQ" href="http://www.cyberciti.biz/faq/category/redhat-and-friends/"><img

src="http://s0.cyberciti.org/images/category/old/rhlogo.gif" alt=""

border="0" /></a></div><span class="drop_cap">H</span>ow do I install gnu gcc

compi
]]>
<![CDATA[
ler and related tools such as autoconf, automake, flex, c++ compiler, and

bison on a CentOS 7 or Red Hat Enterprise Linux version 7 server?<p>Read

answer to: "<strong><A href="http://www.cyberciti.biz/faq/centos-rhel-7-

redhat-linux-install-gcc-compiler-development-tools/">CentOS / RHEL 7:

Install GCC (C and C++ Compiler) and Development Tools</a></strong>"</p><p><a

title="Post to Twitter" href="http://twitter.com/share?

related=nixcraft&text=CentOS / RHEL 7: Install GCC (C and C++ Compiler) and

Development Tools&url=http://www.cyberciti.biz/faq/centos-rhel-7-redhat-

linux-install-gcc-compiler-development-tools/&via=nixcraft" target="_blank"

border="0"><img border="0"

src="http://s0.cyberciti.org/images/misc/feed.tweet.png" alt="Tweet this"

/></a> &nbsp;&nbsp;&nbsp;<a title="Share on Facebook"

href="http://www.facebook.com/sharer.php?

u=http://www.cyberciti.biz/faq/centos-rhel-7-redhat-linux-install-gcc-

compiler-development-tools/" target="_blank"><img border="0"

src="http://s0.cyberciti.org/images/misc/feed.fb.png" alt="Share on Facebook"

/></a></p>
]]>
</description>
<wfw:commentRss>
http://www.cyberciti.biz/faq/centos-rhel-7-redhat-linux-install-gcc-

compiler-development-tools/feed/
</wfw:commentRss>
<slash:comments>1</slash:comments>
</item>
<item>
<title>Linux Redirect Error Output To File</title>
<link>
http://www.cyberciti.biz/faq/linux-redirect-error-output-to-file/
</link>
<comments>
http://www.cyberciti.biz/faq/linux-redirect-error-output-to-file/#comments
</comments>
<pubDate>Mon, 23 Jun 2014 08:04:34 +0000</pubDate>
<dc:creator>
<![CDATA[ Nix Craft ]]>
</dc:creator>
<category>
<![CDATA[ BASH Shell ]]>
</category>
<category>
<![CDATA[ Linux ]]>
</category>
<category>
<![CDATA[ UNIX ]]>
</category>
<guid isPermaLink="false">http://www.cyberciti.biz/faq/?p=44411</guid>
<description>
<![CDATA[
<div class="my_story"><a title="See all GNU/Linux related FAQ"

href="http://www.cyberciti.biz/faq/category/linux/"><img

src="http://s0.cyberciti.org/images/category/old/linux-logo.png" alt=""

border="0" /></a></div><span class="drop_cap">I</span> am a new Ubuntu Linux

and bash shell user. I also know how to redirect output from display/screen

to a file using the following syntax: <kbd>cmd > file ls > file</kbd>

However, some time errors are displayed on screen. How do I store and

redirect output from the computer screen to a file on a Linux or Unix-like

systems?<p>Read answer to: "<strong><A

href="http://www.cyberciti.biz/faq/linux-redirect-error-output-to-

file/">Linux Redirect Error Output To File</a></strong>"</p><p><a title="Post

to Twitter" href="http://twitter.com/share?related=nixcraft&text=Linux

Redirect Error Output To File&url=http://www.cyberciti.biz/faq/linux-

redirect-error-output-to-file/&via=nixcraft" target="_blank" border="0"><img

border="0" src="http://s0.cyberciti.org/images/misc/feed.tweet.png"

alt="Tweet this" /></a> &nbsp;&nbsp;&nbsp;<a title="Share on Facebook"

href="http://www.facebook.com/sharer.php?

u=http://www.cyberciti.biz/faq/linux-redirect-error-output-to-file/"

target="_blank"><img border="0"

src="http://s0.cyberciti.org/images/misc/feed.fb.png" alt="Share on Facebook"

/></a></p>
]]>
</description>
<wfw:commentRss>
http://www.cyberciti.biz/faq/linux-redirect-error-output-to-file/feed/
</wfw:commentRss>
<slash:comments>4</slash:comments>
</item>
<item>
<title>
FreeBSD 10: Apply Binary Updates To Keep Base System Up To Date
</title>
<link>
http://www.cyberciti.biz/faq/freebsd-10-apply-binary-updates-to-keep-base-

system-up-to-date/
</link>
<comments>
http://www.cyberciti.biz/faq/freebsd-10-apply-binary-updates-to-keep-base-

system-up-to-date/#comments
</comments>
<pubDate>Mon, 23 Jun 2014 07:59:28 +0000</pubDate>
<dc:creator>
<![CDATA[ Nix Craft ]]>
</dc:creator>
<category>
<![CDATA[ FreeBSD ]]>
</category>
<category>
<![CDATA[ FreeBSD Jails (VPS) ]]>
</category>
<category>
<![CDATA[ Hardware ]]>
</category>
<category>
<![CDATA[ Package Management ]]>
</category>
<category>
<![CDATA[ freebsd update command ]]>
</category>
<category>
<![CDATA[ uname command ]]>
</category>
<guid isPermaLink="false">http://www.cyberciti.biz/faq/?p=44412</guid>
<description>
<![CDATA[
<div class="my_story"><a title="See all FreeBSD related FAQ"

href="http://www.cyberciti.biz/faq/category/freebsd/"><img

src="http://s0.cyberciti.org/images/category/old/freebsd_logo_sm.png" alt=""

border="0" /></a></div><span class="drop_cap">I</span> know keeping a FreeBSD

server up to date is a very important. How can I apply binary system patches

and updates to a new installation of FreeBSD 10 server?<p>Read answer to:

"<strong><A href="http://www.cyberciti.biz/faq/freebsd-10-apply-binary-

updates-to-keep-base-system-up-to-date/">FreeBSD 10: Apply Binary Updates To

Keep Base System Up To Date</a></strong>"</p><p><a title="Post to Twitter"

href="http://twitter.com/share?related=nixcraft&text=FreeBSD 10: Apply Binary

Updates To Keep Base System Up To

Date&url=http://www.cyberciti.biz/faq/freebsd-10-apply-binary-updates-to-

keep-base-system-up-to-date/&via=nixcraft" target="_blank" border="0"><img

border="0" src="http://s0.cyberciti.org/images/misc/feed.tweet.png"

alt="Tweet this" /></a> &nbsp;&nbsp;&nbsp;<a title="Share on Facebook"

href="http://www.facebook.com/sharer.php?

u=http://www.cyberciti.biz/faq/freebsd-10-apply-binary-updates-to-keep-base-

system-up-to-date/" target="_blank"><img border="0"

src="http://s0.cyberciti.org/images/misc/feed.fb.png" alt="Share on Facebook"

/></a></p>
]]>
</description>
<wfw:commentRss>
http://www.cyberciti.biz/faq/freebsd-10-apply-binary-updates-to-keep-base-

system-up-to-date/feed/
</wfw:commentRss>
<slash:comments>0</slash:comments>
</item>
<item>
<title>
CentOS and RHEL 7: Install Linux, Apache, MariaDB, PHP (LAMP) Stack
</title>
<link>
http://www.cyberciti.biz/faq/howto-install-linux-apache-mariadb-php-lamp-

stack-on-centos7-rhel7/
</link>
<comments>
http://www.cyberciti.biz/faq/howto-install-linux-apache-mariadb-php-lamp-

stack-on-centos7-rhel7/#comments
</comments>
<pubDate>Mon, 23 Jun 2014 07:58:06 +0000</pubDate>
<dc:creator>
<![CDATA[ Nix Craft ]]>
</dc:creator>
<category>
<![CDATA[ Apache ]]>
</category>
<category>
<![CDATA[ CentOS ]]>
</category>
<category>
<![CDATA[ MySQL ]]>
</category>
<category>
<![CDATA[ PHP ]]>
</category>
<category>
<![CDATA[ RedHat and Friends ]]>
</category>
<category>
<![CDATA[ CentOS7 ]]>
</category>
<category>
<![CDATA[ RHEL7 ]]>
</category>
<guid isPermaLink="false">http://www.cyberciti.biz/faq/?p=53517</guid>
<description>
<![CDATA[
<div class="my_story"><a title="See all Redhat/CentOS/Fedora Core related

FAQ" href="http://www.cyberciti.biz/faq/category/redhat-and-friends/"><img

src="http://s0.cyberciti.org/images/category/old/rhlogo.gif" alt=""

border="0" /></a></div><span class="drop_cap">I</span> am new Red Hat

Enterprise Linux version 7 user/sysadmin/developer. This version made the big

number change for RHEL 7/CentOS 7. How can I install LAMP (Linux, Apache,

MariaDB, PHP) stack on a RHEL version 7 or CentOS Linux version 7 using CLI

or over ssh based session?<p>Read answer to: "<strong><A

href="http://www.cyberciti.biz/faq/howto-install-linux-apache-mariadb-php-

lamp-stack-on-centos7-rhel7/">CentOS and RHEL 7: Install Linux, Apache,

MariaDB, PHP (LAMP) Stack</a></strong>"</p><p><a title="Post to Twitter"

href="http://twitter.com/share?related=nixcraft&text=CentOS and RHEL 7:

Install Linux, Apache, MariaDB, PHP (LAMP)

Stack&url=http://www.cyberciti.biz/faq/howto-install-linux-apache-mariadb-

php-lamp-stack-on-centos7-rhel7/&via=nixcraft" target="_blank"

border="0"><img border="0"

src="http://s0.cyberciti.org/images/misc/feed.tweet.png" alt="Tweet this"

/></a> &nbsp;&nbsp;&nbsp;<a title="Share on Facebook"

href="http://www.facebook.com/sharer.php?

u=http://www.cyberciti.biz/faq/howto-install-linux-apache-mariadb-php-lamp-

stack-on-centos7-rhel7/" target="_blank"><img border="0"

src="http://s0.cyberciti.org/images/misc/feed.fb.png" alt="Share on Facebook"

/></a></p>
]]>
</description>
<wfw:commentRss>
http://www.cyberciti.biz/faq/howto-install-linux-apache-mariadb-php-lamp-

stack-on-centos7-rhel7/feed/
</wfw:commentRss>
<slash:comments>12</slash:comments>
</item>
<item>
<title>Fedora Linux 19/20 Install Adobe Flash Player</title>
<link>
http://www.cyberciti.biz/faq/fedora-linux-1920-install-adobe-flash-player/
</link>
<comments>
http://www.cyberciti.biz/faq/fedora-linux-1920-install-adobe-flash-

player/#comments
</comments>
<pubDate>Tue, 03 Jun 2014 19:31:52 +0000</pubDate>
<dc:creator>
<![CDATA[ Nix Craft ]]>
</dc:creator>
<category>
<![CDATA[ Fedora Linux ]]>
</category>
<category>
<![CDATA[ Linux Video / Multimedia ]]>
</category>
<category>
<![CDATA[ Package Management ]]>
</category>
<guid isPermaLink="false">http://www.cyberciti.biz/faq/?p=44319</guid>
<description>
<![CDATA[
<div class="my_story"><a title="See all Fedora Linux related FAQ"

href="http://www.cyberciti.biz/faq/category/fedora-linux/"><img

src="http://s0.cyberciti.org/images/category/old/fedora-logo.png" alt=""

border="0" /></a></div><span class="drop_cap">I</span> want to use <a

href="http://www.cyberciti.biz/faq/access-pandora-radio-using-proxy-server-

outside-usa/">Pandora online radio on a Fedora Linux desktop</a>. How can I

install Adobe Flash Player Plugin version 11.2 with <a

href="http://www.cyberciti.biz/faq/rhel-centos-fedora-linux-yum-command-

howto/" title="See Linux/Unix yum command examples for more info">yum

command</a> on a Fedora Linux 64 bit desktop or 32 bit version 20 laptop

system?<p>Read answer to: "<strong><A

href="http://www.cyberciti.biz/faq/fedora-linux-1920-install-adobe-flash-

player/">Fedora Linux 19/20 Install Adobe Flash Player</a></strong>"</p><p><a

title="Post to Twitter" href="http://twitter.com/share?

related=nixcraft&text=Fedora Linux 19/20 Install Adobe Flash

Player&url=http://www.cyberciti.biz/faq/fedora-linux-1920-install-adobe-

flash-player/&via=nixcraft" target="_blank" border="0"><img border="0"

src="http://s0.cyberciti.org/images/misc/feed.tweet.png" alt="Tweet this"

/></a> &nbsp;&nbsp;&nbsp;<a title="Share on Facebook"

href="http://www.facebook.com/sharer.php?

u=http://www.cyberciti.biz/faq/fedora-linux-1920-install-adobe-flash-player/"

target="_blank"><img border="0"

src="http://s0.cyberciti.org/images/misc/feed.fb.png" alt="Share on Facebook"

/></a></p>
]]>
</description>
<wfw:commentRss>
http://www.cyberciti.biz/faq/fedora-linux-1920-install-adobe-flash-

player/feed/
</wfw:commentRss>
<slash:comments>1</slash:comments>
</item>
<item>
<title>
Linux: Bash Delete All Files In Directory Except Few
</title>
<link>
http://www.cyberciti.biz/faq/linux-bash-delete-all-files-in-directory-

except-few/
</link>
<comments>
http://www.cyberciti.biz/faq/linux-bash-delete-all-files-in-directory-

except-few/#comments
</comments>
<pubDate>Tue, 03 Jun 2014 16:57:42 +0000</pubDate>
<dc:creator>
<![CDATA[ Nix Craft ]]>
</dc:creator>
<category>
<![CDATA[ BASH Shell ]]>
</category>
<category>
<![CDATA[ Linux ]]>
</category>
<category>
<![CDATA[ UNIX ]]>
</category>
<category>
<![CDATA[ find command ]]>
</category>
<category>
<![CDATA[ rm command ]]>
</category>
<guid isPermaLink="false">http://www.cyberciti.biz/faq/?p=44272</guid>
<description>
<![CDATA[
<div class="my_story"><a title="See all Bash/Shell scripting related FAQ"

href="http://www.cyberciti.biz/faq/category/bash-shell/"><img

src="http://s0.cyberciti.org/images/category/old/terminal.png" alt=""

border="0" /></a></div><span class="drop_cap">I</span>'m a new Linux system

user. I need to cl
]]>
<![CDATA[
eanup in a download directory i.e. delete all files from ~/Downloads/ folders

except the following types: <kbd>*.iso</kbd> - All iso images files.

<kbd>*.zip</kbd> - All zip files. How do I delete all file except some in

bash shell on a Linux, OS X or Unix-like systems?<p>Read answer to:

"<strong><A href="http://www.cyberciti.biz/faq/linux-bash-delete-all-files-

in-directory-except-few/">Linux: Bash Delete All Files In Directory Except

Few</a></strong>"</p><p><a title="Post to Twitter"

href="http://twitter.com/share?related=nixcraft&text=Linux: Bash Delete All

Files In Directory Except Few&url=http://www.cyberciti.biz/faq/linux-bash-

delete-all-files-in-directory-except-few/&via=nixcraft" target="_blank"

border="0"><img border="0"

src="http://s0.cyberciti.org/images/misc/feed.tweet.png" alt="Tweet this"

/></a> &nbsp;&nbsp;&nbsp;<a title="Share on Facebook"

href="http://www.facebook.com/sharer.php?

u=http://www.cyberciti.biz/faq/linux-bash-delete-all-files-in-directory-

except-few/" target="_blank"><img border="0"

src="http://s0.cyberciti.org/images/misc/feed.fb.png" alt="Share on Facebook"

/></a></p>
]]>
</description>
<wfw:commentRss>
http://www.cyberciti.biz/faq/linux-bash-delete-all-files-in-directory-

except-few/feed/
</wfw:commentRss>
<slash:comments>13</slash:comments>
</item>
<item>
<title>
CentOS / RHEL / Fedora Linux: Use Yum Command With A Proxy Server
</title>
<link>
http://www.cyberciti.biz/faq/centos-redhat-fedora-linux-using-yum-with-a-

proxy-server/
</link>
<comments>
http://www.cyberciti.biz/faq/centos-redhat-fedora-linux-using-yum-with-a-

proxy-server/#comments
</comments>
<pubDate>Tue, 03 Jun 2014 10:18:34 +0000</pubDate>
<dc:creator>
<![CDATA[ Nix Craft ]]>
</dc:creator>
<category>
<![CDATA[ CentOS ]]>
</category>
<category>
<![CDATA[ Fedora Linux ]]>
</category>
<category>
<![CDATA[ RedHat and Friends ]]>
</category>
<category>
<![CDATA[ /etc/yum.conf ]]>
</category>
<category>
<![CDATA[ export http_proxy ]]>
</category>
<category>
<![CDATA[ HTTP_PROXY ]]>
</category>
<guid isPermaLink="false">http://www.cyberciti.biz/faq/?p=42441</guid>
<description>
<![CDATA[
<div class="my_story"><a title="See all Sun CentOS Linux related FAQs"

href="http://www.cyberciti.biz/faq/category/centos/"><img

src="http://s0.cyberciti.org/images/category/old/centos_logo.png" alt=""

border="0" /></a></div><span class="drop_cap">M</span>y CentOS Linux based

laptop can only be accessed through our corporate proxy servers. How do I

access and use <a href="http://www.cyberciti.biz/faq/rhel-centos-fedora-

linux-yum-command-howto/" title="See Linux/Unix yum command examples for more

info">yum command</a> with a Web proxy server on a CentOS / RHEL / Fedora /

Red Hat / Scientific Linux?<p>Read answer to: "<strong><A

href="http://www.cyberciti.biz/faq/centos-redhat-fedora-linux-using-yum-

with-a-proxy-server/">CentOS / RHEL / Fedora Linux: Use Yum Command With A

Proxy Server</a></strong>"</p><p><a title="Post to Twitter"

href="http://twitter.com/share?related=nixcraft&text=CentOS / RHEL / Fedora

Linux: Use Yum Command With A Proxy

Server&url=http://www.cyberciti.biz/faq/centos-redhat-fedora-linux-using-

yum-with-a-proxy-server/&via=nixcraft" target="_blank" border="0"><img

border="0" src="http://s0.cyberciti.org/images/misc/feed.tweet.png"

alt="Tweet this" /></a> &nbsp;&nbsp;&nbsp;<a title="Share on Facebook"

href="http://www.facebook.com/sharer.php?

u=http://www.cyberciti.biz/faq/centos-redhat-fedora-linux-using-yum-with-a-

proxy-server/" target="_blank"><img border="0"

src="http://s0.cyberciti.org/images/misc/feed.fb.png" alt="Share on Facebook"

/></a></p>
]]>
</description>
<wfw:commentRss>
http://www.cyberciti.biz/faq/centos-redhat-fedora-linux-using-yum-with-a-

proxy-server/feed/
</wfw:commentRss>
<slash:comments>5</slash:comments>
</item>
<item>
<title>HowTo: Compile And Run a C/C++ Code In Linux</title>
<link>
http://www.cyberciti.biz/faq/howto-compile-and-run-c-cplusplus-code-in-linux/
</link>
<comments>
http://www.cyberciti.biz/faq/howto-compile-and-run-c-cplusplus-code-in-

linux/#comments
</comments>
<pubDate>Thu, 17 Apr 2014 16:56:23 +0000</pubDate>
<dc:creator>
<![CDATA[ Nix Craft ]]>
</dc:creator>
<category>
<![CDATA[ BASH Shell ]]>
</category>
<category>
<![CDATA[ Debian / Ubuntu ]]>
</category>
<category>
<![CDATA[ GNU C / C++ ]]>
</category>
<category>
<![CDATA[ Linux ]]>
</category>
<category>
<![CDATA[ Programming ]]>
</category>
<category>
<![CDATA[ RedHat and Friends ]]>
</category>
<category>
<![CDATA[ cc command ]]>
</category>
<category>
<![CDATA[ g++ command ]]>
</category>
<category>
<![CDATA[ gcc command ]]>
</category>
<guid isPermaLink="false">http://www.cyberciti.biz/faq/?p=37770</guid>
<description>
<![CDATA[
<div class="my_story"><a title="See all GNU/Linux related FAQ"

href="http://www.cyberciti.biz/faq/category/linux/"><img

src="http://s0.cyberciti.org/images/category/old/linux-logo.png" alt=""

border="0" /></a></div><span class="drop_cap">I</span> am a new Linux user

and student who used to write C or C++ programs on MS-Windows. Now, I am

using Ubuntu Linux. How can I compile a C or C++ program on Linux operating

systems using bash Terminal application?<p>Read answer to: "<strong><A

href="http://www.cyberciti.biz/faq/howto-compile-and-run-c-cplusplus-code-

in-linux/">HowTo: Compile And Run a C/C++ Code In

Linux</a></strong>"</p><p><a title="Post to Twitter"

href="http://twitter.com/share?related=nixcraft&text=HowTo: Compile And Run a

C/C++ Code In Linux&url=http://www.cyberciti.biz/faq/howto-compile-and-run-

c-cplusplus-code-in-linux/&via=nixcraft" target="_blank" border="0"><img

border="0" src="http://s0.cyberciti.org/images/misc/feed.tweet.png"

alt="Tweet this" /></a> &nbsp;&nbsp;&nbsp;<a title="Share on Facebook"

href="http://www.facebook.com/sharer.php?

u=http://www.cyberciti.biz/faq/howto-compile-and-run-c-cplusplus-code-in-

linux/" target="_blank"><img border="0"

src="http://s0.cyberciti.org/images/misc/feed.fb.png" alt="Share on Facebook"

/></a></p>
]]>
</description>
<wfw:commentRss>
http://www.cyberciti.biz/faq/howto-compile-and-run-c-cplusplus-code-in-

linux/feed/
</wfw:commentRss>
<slash:comments>7</slash:comments>
</item>
<item>
<title>Linux And Unix Command To View File</title>
<link>
http://www.cyberciti.biz/faq/unix-linux-command-to-view-file/
</link>
<comments>
http://www.cyberciti.biz/faq/unix-linux-command-to-view-file/#comments
</comments>
<pubDate>Thu, 17 Apr 2014 16:55:57 +0000</pubDate>
<dc:creator>
<![CDATA[ Nix Craft ]]>
</dc:creator>
<category>
<![CDATA[ BASH Shell ]]>
</category>
<category>
<![CDATA[ Debian / Ubuntu ]]>
</category>
<category>
<![CDATA[ Linux ]]>
</category>
<category>
<![CDATA[ RedHat and Friends ]]>
</category>
<category>
<![CDATA[ UNIX ]]>
</category>
<category>
<![CDATA[ gnome-open command ]]>
</category>
<category>
<![CDATA[ kde-open command ]]>
</category>
<category>
<![CDATA[ xdg-open command ]]>
</category>
<guid isPermaLink="false">http://www.cyberciti.biz/faq/?p=37767</guid>
<description>
<![CDATA[
<div class="my_story"><a title="See all UNIX related articles/faq"

href="http://www.cyberciti.biz/faq/category/unix/"><img

src="http://s0.cyberciti.org/images/category/old/unix-logo.gif" alt=""

border="0" /></a></div><span class="drop_cap">I</span> am a new Linux bash

shell command line user. How can I view a text file using command line on a

Linux or Unix-like operating systems? How can I view (open) binary files such

as PDF or images on a Linux or Unix like system from command line?<p>Read

answer to: "<strong><A href="http://www.cyberciti.biz/faq/unix-linux-

command-to-view-file/">Linux And Unix Command To View

File</a></strong>"</p><p><a title="Post to Twitter"

href="http://twitter.com/share?related=nixcraft&text=Linux And Unix Command

To View File&url=http://www.cyberciti.biz/faq/unix-linux-command-to-view-

file/&via=nixcraft" target="_blank" border="0"><img border="0"

src="http://s0.cyberciti.org/images/misc/feed.tweet.png" alt="Tweet this"

/></a> &nbsp;&nbsp;&nbsp;<a title="Share on Facebook"

href="http://www.facebook.com/sharer.php?

u=http://www.cyberciti.biz/faq/unix-linux-command-to-view-file/"

target="_blank"><img border="0"

src="http://s0.cyberciti.org/images/misc/feed.fb.png" alt="Share on Facebook"

/></a></p>
]]>
</description>
<wfw:commentRss>
http://www.cyberciti.biz/faq/unix-linux-command-to-view-file/feed/
</wfw:commentRss>
<slash:comments>3</slash:comments>
</item>
<item>
<title>
Linux / Unix: Find And List All Hidden Files Recursively
</title>
<link>
http://www.cyberciti.biz/faq/unix-linux-centos-ubuntu-find-hidden-files-

recursively/
</link>
<comments>
http://www.cyberciti.biz/faq/unix-linux-centos-ubuntu-find-hidden-files-

recursively/#comments
</comments>
<pubDate>Mon, 07 Apr 2014 16:22:32 +0000</pubDate>
<dc:creator>
<![CDATA[ Nix Craft ]]>
</dc:creator>
<category>
<![CDATA[ BASH Shell ]]>
</category>
<category>
<![CDATA[ Commands ]]>
</category>
<category>
<![CDATA[ Linux ]]>
</category>
<category>
<![CDATA[ UNIX ]]>
</category>
<category>
<![CDATA[ CentOS ]]>
</category>
<category>
<![CDATA[ find command ]]>
</category>
<guid isPermaLink="false">http://www.cyberciti.biz/faq/?p=37763</guid>
<description>
<![CDATA[
<div class="my_story"><a title="See all UNIX related articles/faq"

href="http://www.cyberciti.biz/faq/category/unix/"><img

src="http://s0.cyberciti.org/images/category/old/unix-logo.gif" alt=""

border="0" /></a></div><span class="drop_cap">I</span> am a new Unix system

shell user. I need to find and list all hidden files including directories on

a Linux or Unix-like system. How can I recursively list all hidden files and

directories? How do I save result in a text file?<p>Read answer to:

"<strong><A href="http://www.cyberciti.biz/faq/unix-linux-centos-ubuntu-

find-hidden-files-recursively/">Linux / Unix: Find And List All Hidden Files

Recursively</a></strong>"</p><p><a title="Post to Twitter"

href="http://twitter.com/share?related=nixcraft&text=Linux / Unix: Find And

List All Hidden Files Recursively&url=http://www.cyberciti.biz/faq/unix-

linux-centos-ubuntu-find-hidden-files-recursively/&via=nixcraft"

target="_blank" border="0"><img border="0"

src="http://s0.cyberciti.org/images/misc/feed.tweet.png" alt="Tweet this"

/></a> &nbsp;&nbsp;&nbsp;<a title="Share on Facebook"

href="http://www.facebook.com/sharer.php?

u=http://www.cyberciti.biz/faq/unix-linux-centos-ubuntu-find-hidden-files-

recursively/" target="_blank"><img border="0"

src="http://s0.cyberciti.org/images/misc/feed.fb.png" alt="Share on Facebook"

/></a></p>
]]>
</description>
<wfw:commentRss>
http://www.cyberciti.biz/faq/unix-linux-centos-ubuntu-find-hidden-files-

recursively/feed/
</wfw:commentRss>
<slash:comments>3</slash:comments>
</item>
<item>
<title>
OS X Terminal: -bash: warning: setlocale: LC_CTYPE: cannot change locale

(UTF-8): No such file or directory Fix
</title>
<link>
http://www.cyberciti.biz/faq/os-x-terminal-bash-warning-setlocale-lc_ctype-

cannot-change-locale/
</link>
<comments>
http://www.cyberciti.biz/faq/os-x-terminal-bash-warning-setlocale-lc_ctype-

cannot-change-locale/#comments
</comments>
<pubDate>Mon, 07 Apr 2014 05:58:16 +0000</pubDate>
<dc:creator>
<![CDATA[ Nix Craft ]]>
</dc:creator>
<category>
<![CDATA[ BASH Shell ]]>
</category>
<category>
<![CDATA[ Linux ]]>
</category>
<category>
<![CDATA[ Mac OS X ]]>
</category>
<category>
<![CDATA[ UNIX ]]>
</category>
<category>
<![CDATA[ locale command ]]>
</category>
<category>
<![CDATA[ localedef command ]]>
</category>
<guid isPermaLink="false">http://www.cyberciti.biz/faq/?p=36799</guid>
<description>
<![CDATA[
<div class="my_story"><a title="See all Apple Mac OS X related FAQs"

href="http://www.cyberciti.biz/faq/category/mac-os-x/"><img

src="http://s0.cyberciti.org/images/category/old/osx-leopard.png" alt=""

border="0" /></a></div><span class="drop_cap">I</span>'m a new Apple OS X

Mabbook user. I am getting an error which read as follows when I connect to

any remote Linux/Unix/BSD server or machine through OS X ssh Terminal

app:<blockquote><em>ssh user@server1.cyberciti.biz</em> Last login: Wed Mar

26 08:45:36 2014 from 1.2.3.4 <span style='color: rgb(255, 0, 0);'>-bash:

warning: setlocale: LC_CTYPE: cannot change locale (UTF-8): No such file or

directory</span></blockquote> How do I fix this error?<p>Read answer to:

"<strong><A href="http://www.cyberciti.biz/faq/os-x-terminal-bash-warning-

setlocale-lc_ctype-cannot-change-locale/">OS X Terminal: -bash: warning:

setlocale: LC_CTYPE: cannot change locale (UTF-8): No such file or directory

Fix</a></strong>"</p><p><a title="Post to Twitter"

href="http://twitter.com/share?related=nixcraft&text=OS X Terminal: -bash:

warning: setlocale: LC_CTYPE: cannot change locale (UTF-8): No such file or

directory Fix&url=http://www.cyberciti.biz/faq/os-x-terminal-bash-warning-

setlocale-lc_ctype-cannot-change-locale/&via=nixcraft" target="_blank"

border="0"><img border="0"

src="http://s0.cyberciti.org/images/misc/feed.tweet.png" alt="Tweet this"

/></a> &nbsp;&nbsp;&nbsp;<a title="Share on Facebook"

href="http://www.facebook.com/sharer.php?u=http://www.cyberciti.biz/faq/os-

x-terminal-bash-warning-setlocale-lc_ctype-cannot-change-locale/"

target="_blank"><img border="0"

src="http://s0.cyberciti.org/images/misc/feed.fb.png" alt="Share on Facebook"

/></a></p>
]]>
</description>
<wfw:commentRss>
http://www.cyberciti.biz/faq/os-x-terminal-bash-warning-setlocale-lc_ctype-

cannot-change-locale/feed/
</wfw:commentRss>
<slash:comments>6</slash:comments>
</item>
<item>
<title>
Mac OS X: Force Quit An Unresponsive Full Screen Application Shortcut Key
</title>
<link>
http://www.cyberciti.biz/faq/how-to-force-quit-fullscreen-application-in-

mac-os-x/
</link>
<comments>
http://www.cyberciti.biz/faq/how-to-force-quit-fullscreen-application-in-

mac-os-x/#comments
</comments>
<pubDate>Mon, 07 Apr 2014 05:55:42 +0000</pubDate>
<dc:creator>
<![CDATA[ Nix Craft ]]>
</dc:creator>
<category>
<![CDATA[ Commands ]]>
</category>
<category>
<![CDATA[ Hardware ]]>
</category>
<category>
<![CDATA[ Mac OS X ]]>
</category>
<category>
<![CDATA[ UNIX ]]>
</category>
<category>
<![CDATA[ killall command ]]>
</category>
<category>
<![CDATA[ OS X Mountain Lion ]]>
</category>
<guid isPermaLink="false">http://www.cyberciti.biz/faq/?p=37714</guid>
<description>
<![CDATA[
<div class="my_story"><a title="See all Apple Mac OS X related FAQs"

href="http://www.cyberciti.biz/faq/category/mac-os-x/"><img

src="http://s0.cyberciti.org/images/category/old/osx-leopard.png" alt=""

border="0" /></a></div><span class="drop_cap">S</span>ometime my VLC

application gets crashed on a
]]>
<![CDATA[
Mac OS X system. The screen goes blank and VLC stays hang running on my

desktop or MacBook. How can I solve this issue and quit an unresponsive VLC

application on a Mac OS X without a hard reboot?<p>Read answer to:

"<strong><A href="http://www.cyberciti.biz/faq/how-to-force-quit-fullscreen-

application-in-mac-os-x/">Mac OS X: Force Quit An Unresponsive Full Screen

Application Shortcut Key</a></strong>"</p><p><a title="Post to Twitter"

href="http://twitter.com/share?related=nixcraft&text=Mac OS X: Force Quit An

Unresponsive Full Screen Application Shortcut

Key&url=http://www.cyberciti.biz/faq/how-to-force-quit-fullscreen-

application-in-mac-os-x/&via=nixcraft" target="_blank" border="0"><img

border="0" src="http://s0.cyberciti.org/images/misc/feed.tweet.png"

alt="Tweet this" /></a> &nbsp;&nbsp;&nbsp;<a title="Share on Facebook"

href="http://www.facebook.com/sharer.php?u=http://www.cyberciti.biz/faq/how-

to-force-quit-fullscreen-application-in-mac-os-x/" target="_blank"><img

border="0" src="http://s0.cyberciti.org/images/misc/feed.fb.png" alt="Share

on Facebook" /></a></p>
]]>
</description>
<wfw:commentRss>
http://www.cyberciti.biz/faq/how-to-force-quit-fullscreen-application-in-

mac-os-x/feed/
</wfw:commentRss>
<slash:comments>1</slash:comments>
</item>
<item>
<title>Unix: Find Directory Name From Path</title>
<link>
http://www.cyberciti.biz/faq/unix-get-directory-name-from-path-command/
</link>
<comments>
http://www.cyberciti.biz/faq/unix-get-directory-name-from-path-

command/#comments
</comments>
<pubDate>Mon, 07 Apr 2014 05:52:43 +0000</pubDate>
<dc:creator>
<![CDATA[ Nix Craft ]]>
</dc:creator>
<category>
<![CDATA[ BASH Shell ]]>
</category>
<category>
<![CDATA[ KSH Shell ]]>
</category>
<category>
<![CDATA[ Linux ]]>
</category>
<category>
<![CDATA[ UNIX ]]>
</category>
<category>
<![CDATA[ apple mac os x ]]>
</category>
<category>
<![CDATA[ CentOS ]]>
</category>
<category>
<![CDATA[ debian ]]>
</category>
<guid isPermaLink="false">http://www.cyberciti.biz/faq/?p=37755</guid>
<description>
<![CDATA[
<div class="my_story"><a title="See all UNIX related articles/faq"

href="http://www.cyberciti.biz/faq/category/unix/"><img

src="http://s0.cyberciti.org/images/category/old/unix-logo.gif" alt=""

border="0" /></a></div><span class="drop_cap">I</span> am a new Unix shell

programer. How can I extract the directory name from a full path (say

/nas01/data/backups/file.tar.gz)? How do I get directory name from its path

on a Linux or Unix-like system?<p>Read answer to: "<strong><A

href="http://www.cyberciti.biz/faq/unix-get-directory-name-from-path-

command/">Unix: Find Directory Name From Path</a></strong>"</p><p><a

title="Post to Twitter" href="http://twitter.com/share?

related=nixcraft&text=Unix: Find Directory Name From

Path&url=http://www.cyberciti.biz/faq/unix-get-directory-name-from-path-

command/&via=nixcraft" target="_blank" border="0"><img border="0"

src="http://s0.cyberciti.org/images/misc/feed.tweet.png" alt="Tweet this"

/></a> &nbsp;&nbsp;&nbsp;<a title="Share on Facebook"

href="http://www.facebook.com/sharer.php?

u=http://www.cyberciti.biz/faq/unix-get-directory-name-from-path-command/"

target="_blank"><img border="0"

src="http://s0.cyberciti.org/images/misc/feed.fb.png" alt="Share on Facebook"

/></a></p>
]]>
</description>
<wfw:commentRss>
http://www.cyberciti.biz/faq/unix-get-directory-name-from-path-command/feed/
</wfw:commentRss>
<slash:comments>1</slash:comments>
</item>
<item>
<title>
Fix: /bin/dbus-launch terminated abnormally without any error message and

solution
</title>
<link>
http://www.cyberciti.biz/faq/fix-bindbus-launch-terminated-abnormally-

without-on-centos-rhel/
</link>
<comments>
http://www.cyberciti.biz/faq/fix-bindbus-launch-terminated-abnormally-

without-on-centos-rhel/#comments
</comments>
<pubDate>Sun, 23 Mar 2014 16:48:19 +0000</pubDate>
<dc:creator>
<![CDATA[ Nix Craft ]]>
</dc:creator>
<category>
<![CDATA[ CentOS ]]>
</category>
<category>
<![CDATA[ Openbsd ]]>
</category>
<category>
<![CDATA[ RedHat and Friends ]]>
</category>
<category>
<![CDATA[ Troubleshooting ]]>
</category>
<category>
<![CDATA[ X Server ]]>
</category>
<guid isPermaLink="false">http://www.cyberciti.biz/faq/?p=35548</guid>
<description>
<![CDATA[
<div class="my_story"><a title="See all Redhat/CentOS/Fedora Core related

FAQ" href="http://www.cyberciti.biz/faq/category/redhat-and-friends/"><img

src="http://s0.cyberciti.org/images/category/old/rhlogo.gif" alt=""

border="0" /></a></div><span class="drop_cap">I</span> am a new Linux server

user. <a href="http://www.cyberciti.biz/faq/linux-unix-tunneling-xwindows-

securely-over-ssh/">I need to tunnel X over ssh</a>. I type the following

command on a CentOS/RHEL based remote host to get display on a local

desktop:<blockquote>ssh -X user@server1.cyberciti.biz xeyes &#038; firefox

&#038;</blockquote> But, I am getting an error that read as

follows:<blockquote><strong><span style='color: rgb(255, 0, 0);'>**error**:

Failed to contact configuration server; some possible causes are that you

need to enable TCP/IP networking for ORBit, or you have stale NFS locks due

to a system crash. See http://projects.gnome.org/gconf/ for information.

(Details - 1: Failed to get connection to session: /bin/dbus-launch

terminated abnormally without any error message)</span></strong></blockquote>

How do I fix this error on a newly formatted/installed RHEL or CentOS Linux

6.x server?<p>Read answer to: "<strong><A

href="http://www.cyberciti.biz/faq/fix-bindbus-launch-terminated-abnormally-

without-on-centos-rhel/">Fix: /bin/dbus-launch terminated abnormally without

any error message and solution</a></strong>"</p><p><a title="Post to Twitter"

href="http://twitter.com/share?related=nixcraft&text=Fix: /bin/dbus-launch

terminated abnormally without any error message and

solution&url=http://www.cyberciti.biz/faq/fix-bindbus-launch-terminated-

abnormally-without-on-centos-rhel/&via=nixcraft" target="_blank"

border="0"><img border="0"

src="http://s0.cyberciti.org/images/misc/feed.tweet.png" alt="Tweet this"

/></a> &nbsp;&nbsp;&nbsp;<a title="Share on Facebook"

href="http://www.facebook.com/sharer.php?u=http://www.cyberciti.biz/faq/fix-

bindbus-launch-terminated-abnormally-without-on-centos-rhel/"

target="_blank"><img border="0"

src="http://s0.cyberciti.org/images/misc/feed.fb.png" alt="Share on Facebook"

/></a></p>
]]>
</description>
<wfw:commentRss>
http://www.cyberciti.biz/faq/fix-bindbus-launch-terminated-abnormally-

without-on-centos-rhel/feed/
</wfw:commentRss>
<slash:comments>3</slash:comments>
</item>
<item>
<comments>
http://www.cyberciti.biz/faq/uninstall-mysql-ubuntu-linux-command/#comments
</comments>
<pubDate>Sun, 23 Mar 2014 08:06:02 +0000</pubDate>
<dc:creator>
<![CDATA[ Nix Craft ]]>
</dc:creator>
<category>
<![CDATA[ Debian / Ubuntu ]]>
</category>
<category>
<![CDATA[ MySQL ]]>
</category>
<category>
<![CDATA[ Package Management ]]>
</category>
<category>
<![CDATA[ Ubuntu Linux ]]>
</category>
<category>
<![CDATA[ apt-get autoremove ]]>
</category>
<category>
<![CDATA[ apt-get command ]]>
</category>
<category>
<![CDATA[ mysql server ]]>
</category>
<guid isPermaLink="false">http://www.cyberciti.biz/faq/?p=28310</guid>
<description>
<![CDATA[
<div class="my_story"><a title="See all Ubuntu Linux related FAQ"

href="http://www.cyberciti.biz/faq/category/ubuntu-linux/"><img

src="http://s0.cyberciti.org/images/category/old/ubuntu-logo.jpg" alt=""

border="0" /></a></div><span class="drop_cap">I</span>'m a new Ubuntu Linux

user and my cloud hos
]]>
<![CDATA[
ting company installed MySQL server by default. I need to remove it and

delete it from my server as I have no use of MySQL server. How can I

uninstall MySQL on a Ubuntu based systems?<p>Read answer to: "<strong><A

href="http://www.cyberciti.biz/faq/uninstall-mysql-ubuntu-linux-

command/">HowTo: Uninstall MySQL Server in Ubuntu

Linux</a></strong>"</p><p><a title="Post to Twitter"

href="http://twitter.com/share?related=nixcraft&text=HowTo: Uninstall MySQL

Server in Ubuntu Linux&url=http://www.cyberciti.biz/faq/uninstall-mysql-

ubuntu-linux-command/&via=nixcraft" target="_blank" border="0"><img

border="0" src="http://s0.cyberciti.org/images/misc/feed.tweet.png"

alt="Tweet this" /></a> &nbsp;&nbsp;&nbsp;<a title="Share on Facebook"

href="http://www.facebook.com/sharer.php?

u=http://www.cyberciti.biz/faq/uninstall-mysql-ubuntu-linux-command/"

target="_blank"><img border="0"

src="http://s0.cyberciti.org/images/misc/feed.fb.png" alt="Share on Facebook"

/></a></p>
]]>
</description>
<wfw:commentRss>
http://www.cyberciti.biz/faq/uninstall-mysql-ubuntu-linux-command/feed/
</wfw:commentRss>
<slash:comments>4</slash:comments>
</item>
</channel>
</rss>

end.
